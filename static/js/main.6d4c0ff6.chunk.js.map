{"version":3,"sources":["components/NavBar.js","components/Home.js","components/About.js","charts/AllBarChart.js","charts/ClusterChart2018.js","charts/ClusterChart2019.js","charts/Compare.js","charts/Map.js","sandbox/StackedChartSB.js","App.js","serviceWorker.js","index.js","images/New_York_City_Department_of_Environmental_Protection_logo.png","images/NYCOpenData_Logo.png","images/Logo-twitter.png","images/GitHub-Logo-03.png","data/totals.csv","data/2018.csv","data/2019.csv","data/all.csv"],"names":["NavBar","props","state","isOpen","toggle","bind","this","setState","Navbar","color","dark","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","className","NavItem","NavLink","href","src","DEPLogo","alt","DataLogo","TwitterLogo","GithubLogo","React","Component","Home","Container","fluid","Button","outline","About","flex","AllBarChart","d3","data","d","then","drawBarChartTest","margin","width","height","x","domain","map","item","borough_name","range","paddingInner","paddingOuter","y","total","xAxis","yAxis","formatComma","tip","d3Tip","attr","offset","direction","html","svg","refs","canvas","append","call","style","text","selectAll","enter","bandwidth","on","show","hide","id","ref","ClusterChart2018","drawClusterChart","graphWidth","graphHeight","mColors","mainCanvas","permit_description","serv_order","permit_count","year","legendGroup","legend","d3Legend","legendColor","shape","shapePadding","scale","scaleLegendGroup","scaleLegend","legendSize","labelOffset","orient","labels","labelWrap","shapeWidth","labelAlign","radiusScale","maxRadius","distinctBoroughScale","borough_code","length","clusters","Array","select","nodes","i","r","cluster","radius","Math","cos","PI","random","sin","node","force","strength","alpha","forEach","l","sqrt","initialize","_","velocityDecay","e","transition","duration","delay","attrTween","t","Compare","ClusterChart2019","Map","StackedChartSB","drawStackedChart","csv","colors","keys","columns","slice","Set","boroughs","padding","rangeRound","z","update","input","speed","filter","f","k","nice","ticks","sort","property","a","b","indexOf","tickSizeOuter","group","key","exit","remove","classed","bars","merge","reverse","type","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"mZAuDeA,E,YA3CX,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KACDC,MAAQ,CAAEC,QAAQ,GACvB,EAAKC,OAAS,EAAKA,OAAOC,KAAZ,gBAHC,E,sEAOfC,KAAKC,SAAS,CACVJ,QAASG,KAAKJ,MAAMC,W,+BAKxB,OACI,kBAACK,EAAA,EAAD,CAAQC,MAAM,OAAOC,MAAI,EAACC,OAAO,MAG7B,kBAACC,EAAA,EAAD,CAAaC,IAAKC,IAAMC,GAAG,KAA3B,QACA,kBAACH,EAAA,EAAD,CAAaC,IAAKC,IAAMC,GAAG,UAA3B,SACA,kBAACC,EAAA,EAAD,CAAeC,QAASX,KAAKF,SAC7B,kBAACc,EAAA,EAAD,CAAUf,OAAQG,KAAKJ,MAAMC,OAAQgB,QAAM,GACvC,kBAACC,EAAA,EAAD,CAAKC,UAAU,UAAUF,QAAM,GAC3B,kBAACG,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASF,UAAU,UAAUG,KAAK,4CAA2C,yBAAKC,IAAKC,IAASC,IAAI,eAExG,kBAACL,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAASF,UAAU,UAAUG,KAAK,+EAA8E,yBAAKC,IAAKG,IAAUD,IAAI,qBAE5I,kBAACL,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAASF,UAAU,UAAUG,KAAK,qCAAoC,yBAAKC,IAAKI,IAAaF,IAAI,mBAErG,kBAACL,EAAA,EAAD,KAEI,kBAACC,EAAA,EAAD,CAASF,UAAU,UAAUG,KAAK,kCAAiC,yBAAKC,IAAKK,IAAYH,IAAI,yB,GApCpGI,IAAMC,W,kBCmBZC,E,iLArBP,OACI,6BAEI,iDACA,iDACA,kBAACC,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAACC,EAAA,EAAD,CAAQC,SAAO,EAAC5B,MAAM,WAAU,kBAAC,IAAD,CAAMM,GAAG,SAAT,SAAsC,IACtE,kBAACqB,EAAA,EAAD,CAAQC,SAAO,EAAC5B,MAAM,WAAU,kBAAC,IAAD,CAAMM,GAAG,SAAT,SAAsC,IACtE,kBAACqB,EAAA,EAAD,CAAQC,SAAO,EAAC5B,MAAM,WAAU,kBAAC,IAAD,CAAMM,GAAG,eAAT,kBAAqD,IAErF,kBAACqB,EAAA,EAAD,CAAQC,SAAO,EAAC5B,MAAM,WAAU,kBAAC,IAAD,CAAMM,GAAG,kBAAT,sBAA4D,IAC5F,kBAACqB,EAAA,EAAD,CAAQC,SAAO,EAAC5B,MAAM,WAAU,kBAAC,IAAD,CAAMM,GAAG,QAAT,QAAoC,IAEpE,kBAACqB,EAAA,EAAD,CAAQ3B,MAAM,WAAU,kBAAC,IAAD,CAAMM,GAAG,oBAAT,uBAA+D,U,GAhBxFgB,IAAMC,WCOVM,EATD,WACV,OACI,kBAACJ,EAAA,EAAD,CAAWK,MAAI,GACX,kDACA,gD,gCCkPGC,E,4LA/OS,IAAD,OACfC,IAAOC,KAAM,SAASC,GAElB,OAAOA,KAEVC,MAAK,SAAAF,GAEF,EAAKG,iBAAiBH,Q,uCAIbA,GACb,IAAMI,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,GAAvCA,EAAiD,GACnDC,EAAQ,IAAMD,EAAcA,EAC5BE,EAAS,IAAMF,EAAaA,EAK1BG,EAAIR,MACLS,OAAOR,EAAKS,KAAI,SAAAC,GAAI,OAAIA,EAAKC,iBAE7BC,MAAM,CAAC,EAAGP,IACVQ,aAAa,IACbC,aAAa,IAEZC,EAAIhB,MACLS,OAAQ,CAAC,EAAGT,IAAOC,GAAM,SAAAC,GAAC,OAAIA,EAAEe,WAChCJ,MAAM,CAACN,EAAQ,IAEdW,EAAQlB,IAAcQ,GACtBW,EAAQnB,IAAYgB,GAGpBI,EAAcpB,IAAU,KAExBqB,EAAMC,cACPC,KAAK,QAAS,UACdC,OAAO,EAAE,EAAG,IACZC,UAAU,KACVC,MAAK,SAASxB,GAYX,MAFiB,0DAAmDA,EAAEU,aAArD,yEACwCQ,EAAYlB,EAAEe,OADtD,kBAMnBU,EAAM3B,IAAUnC,KAAK+D,KAAKC,QAAQC,OAAO,OAC1CP,KAAK,QAASjB,EAAQD,EAAcA,GACpCkB,KAAK,SAAUhB,EAASF,EAAaA,GAErCyB,OAAO,KACPP,KAAK,YALE,oBAKwBlB,EALxB,aAKwCA,EALxC,MAOZsB,EAAII,KAAKV,GAGTM,EAAIG,OAAO,KACNP,KAAK,QAAS,UACdA,KAAK,YAFV,uBAEuChB,EAFvC,MAGKwB,KAAKb,GAEVS,EAAIG,OAAO,KACNP,KAAK,QAAS,UACdQ,KAAKZ,GACLW,OAAO,QACPP,KAAK,YAAa,eAClBA,KAAK,IAAK,GACVA,KAAK,KAAM,SACXS,MAAM,cAAe,OACrBC,KAAK,WAGVN,EAAIO,UAAU,QACTjC,KAAKA,GACLkC,QAAQL,OAAO,QACXP,KAAK,QAAS,OACdA,KAAK,KAAK,SAACrB,GAAD,OAAOM,EAAEN,EAAEU,iBACrBW,KAAK,QAASf,EAAE4B,WAChBb,KAAK,KAAK,SAAArB,GAAC,OAAIc,EAAEd,EAAEe,UACnBM,KAAK,UAAU,SAAArB,GAAC,OAAIK,EAASS,EAAEd,EAAEe,UACjCoB,GAAG,YAAahB,EAAIiB,MACpBD,GAAG,WAAYhB,EAAIkB,Q,+BA0I5B,OACI,kBAAC9C,EAAA,EAAD,CAAWC,OAAK,GAEZ,wBAAI8C,GAAG,eAAe5D,UAAU,oBAAhC,+CACA,yBAAK4D,GAAG,eAAe5D,UAAU,YAAY6D,IAAI,gB,GA3OvCnD,IAAMC,W,yBCgQjBmD,E,4LA7PS,IAAD,OACf1C,IAAOC,KAAM,SAAAC,GAAC,OAAIA,KACjBC,MAAK,SAAAF,GACF,EAAK0C,iBAAiB1C,Q,uCAIbA,GACb,IAEM0B,EAFS3B,IAAUnC,KAAK+D,KAAKC,QAEhBC,OAAO,OACrBP,KAAK,QAAS,KACdA,KAAK,SAAU,KACfS,MAAM,SAAU,mBAMf3B,EAAgB,GAAhBA,EAAiD,GACjDuC,EAAa,IAAMvC,EADQ,GAE3BwC,EAAc,IAAMxC,EAFmB,GAIvCyC,EAAU9C,IAAgBA,KAI1B+C,EAAapB,EAAIG,OAAO,KACzBP,KAAK,QAASqB,EAAa,GAC3BrB,KAAK,SAAUsB,EAAc,GAC7BtB,KAAK,YAHS,oBAGiBlB,EAAc,GAH/B,aAGsCA,EAAa,IAHnD,MAKbe,EAAcpB,IAAU,KAGxBqB,EAAMC,cACPC,KAAK,QAAS,UACdC,OAAO,EAAE,GAAI,IACbC,UAAU,KACVC,MAAK,SAAAxB,GAOF,MANiB,kCAA2BA,EAAEU,aAA7B,2EAC0CV,EAAE8C,mBAD5C,sEAEqC9C,EAAE+C,WAFvC,iEAGgC7B,EAAYlB,EAAEgD,cAH9C,gEAI+BhD,EAAEiD,KAJjC,kBAUnBC,EAAczB,EAAIG,OAAO,KAC1BP,KAAK,YADU,oBACgBqB,EAAa,IAD7B,UAQdS,EAASC,IAASC,cACnBC,MAAM,UACNC,aAAa,GAEbC,MAAMZ,GAELa,EAAmBhC,EAAIG,OAAO,KAC/BP,KAAK,QAAS,gBACdA,KAAK,YAFe,oBAEWqB,EAAa,EAAI,IAF5B,UAKnBgB,EAAc5D,MAGd6D,EAAaP,IAASO,aACvBH,MAAME,GACNJ,MAAM,UAENC,aAAa,IACbK,YAAY,IACZC,OAAO,cACPC,OAAO,CAAC,uBACL,GAAI,GAAI,GAAI,yBACfC,UAAU,IACVC,WAAW,IACXC,WAAW,SAEhBpB,EAAWhB,KAAKV,GAGhB,IAAM+C,EAAcpE,MACfS,OAAOT,IAAUC,GAAM,SAAAC,GAAC,OAAKA,EAAEgD,iBAC/BrC,MAAM,CAAC,GAAIwD,KAKVC,EAHwBtE,MACzBS,OAAOR,EAAKS,KAAK,SAAAR,GAAC,OAAIA,EAAEqE,iBAEsB9D,SAAS+D,OAEtDC,EAAW,IAAIC,MAAMJ,GAI3BV,EAAYnD,OAAOT,IAAUC,GAAM,SAAAC,GAAC,OAAKA,EAAEgD,iBACtCrC,MAAM,CAAC,GArFI,KAuFhBiC,EAAQrC,OAAOR,EAAKS,KAAK,SAAAR,GAAC,OAAIA,EAAEU,iBAC3BC,MANqB,CAAC,UAAW,UAAW,UAAW,UAAW,YASvEuC,EAAYrB,KAAKsB,GAEjBD,EAAYlB,UAAU,QACjBX,KAAK,OAAQ,YAGlBoC,EAAiB5B,KAAK8B,GAEtBF,EAAiBzB,UAAU,QACtBX,KAAK,OAAQ,YAGlBoC,EAAiBgB,OAAO,KAGnBpD,KAAK,OAAQ,WAGlB,IAAMqD,EAAQ5E,IAASC,EAAKuE,QACvB9D,KAAK,SAAAR,GACF,IAAI2E,GAAK5E,EAAKC,GAAGqE,aACbO,EAAIV,EAAYnE,EAAKC,GAAGgD,cAgB5B,OAdAhD,EAAI,CACA6E,QAASF,EACTG,OAAQF,EACRlE,aAAcX,EAAKC,GAAGU,aACtBoC,mBAAoB/C,EAAKC,GAAG8C,mBAC5BC,WAAYhD,EAAKC,GAAG+C,WACpBC,aAAcjD,EAAKC,GAAGgD,aACtBC,KAAMlD,EAAKC,GAAGiD,KACd3C,EAA6C,IAA1CyE,KAAKC,IAAIhF,EAAID,EAAKuE,OAAS,EAAIS,KAAKE,IAAYvC,EAAa,EAAIqC,KAAKG,SACzEpE,EAA6C,IAA1CiE,KAAKI,IAAInF,EAAID,EAAKuE,OAAS,EAAIS,KAAKE,IAAYtC,EAAc,EAAIoC,KAAKG,YAGxEX,EAASI,IAAOC,EAAIL,EAASI,GAAGG,UAAUP,EAASI,GAAK3E,GAEvDA,KAoBToF,GAhBQtF,MAETuF,MAAM,SAAUvF,IAAe4C,EAAYC,EAAc,IAGzD0C,MAAM,UAkCX,WAEI,IAAIX,EACAY,EAAW,GAGf,SAASD,EAAOE,GAGZA,GAASD,EAAWC,EAEpBb,EAAMc,SAAQ,SAASxF,GACf,IAAI6E,EAAUN,EAASvE,EAAE6E,SAC7B,GAAIA,IAAY7E,EAAhB,CAEA,IAAIM,EAAIN,EAAEM,EAAIuE,EAAQvE,EAClBQ,EAAId,EAAEc,EAAI+D,EAAQ/D,EAClB2E,EAAIV,KAAKW,KAAKpF,EAAIA,EAAIQ,EAAIA,GAC1B8D,EAAI5E,EAAE8E,OAASD,EAAQC,OAE3BW,IAAMb,IACNa,GAAKA,EAAIb,GAAKa,EAAIF,EAClBvF,EAAEM,GAAKA,GAAKmF,EACZzF,EAAEc,GAAKA,GAAK2E,EACZZ,EAAQvE,GAAKA,EACbuE,EAAQ/D,GAAKA,OAerB,OATAuE,EAAMM,WAAa,SAAUC,GACzBlB,EAAQkB,GAGZP,EAAMC,SAAW,SAAAM,GAEb,OADAN,EAAgB,MAALM,EAAYN,EAAWM,EAC3BP,GAGJA,EA1EWR,GACbS,SAAS,KAEbD,MAAM,UAAWvF,KAAiB,SAAAE,GAAC,OAAIA,EAAE8E,OA9I9B,OA+IPQ,SAAS,KACTO,cAAc,IAElB1D,GAAG,QAkBR,SAAoB2D,GAChBV,EAAK/D,KAAK,MAAM,SAAArB,GAAC,OAAIA,EAAEM,KAClBe,KAAK,MAAM,SAAArB,GAAC,OAAIA,EAAEc,KAClBO,KAAK,KAAK,SAAArB,GAAC,OAAIA,EAAE8E,UACjB3C,GAAG,YAAahB,EAAIiB,MACpBD,GAAG,WAAYhB,EAAIkB,SAtBnBqC,MAAMA,GAGF7B,EAAWb,UAAU,UAC7BjC,KAAK2E,GAAOzC,QACRL,OAAO,UACPE,MAAM,QAAQ,SAAA9B,GAAC,OAAI4C,EAAQ5C,EAAE6E,QAAUT,OAEhDgB,EAAKW,aACAC,SAAS,KACTC,OAAO,SAACjG,EAAE2E,GAAH,OAAa,EAAJA,KAChBuB,UAAU,KAAK,SAAAlG,GACZ,IAAI2E,EAAI7E,IAAe,EAAGE,EAAE8E,QAC5B,OAAO,SAAAqB,GAAC,OAAInG,EAAE8E,OAASH,EAAEwB,S,+BA6DjC,OACI,kBAAC5G,EAAA,EAAD,CAAWC,OAAK,GAER,wBAAI8C,GAAG,mBAAmB5D,UAAU,wBAApC,yBACA,yBAAK4D,GAAG,mBAAmB5D,UAAU,gBAAgB6D,IAAI,gB,GAlP9CnD,IAAMC,W,iBC+PtBmD,E,4LA7PS,IAAD,OACf1C,IAAOC,KAAM,SAAAC,GAAC,OAAIA,KACjBC,MAAK,SAAAF,GACF,EAAK0C,iBAAiB1C,Q,uCAIbA,GACb,IAEM0B,EAFS3B,IAAUnC,KAAK+D,KAAKC,QAEhBC,OAAO,OACrBP,KAAK,QAAS,KACdA,KAAK,SAAU,KACfS,MAAM,SAAU,mBAMf3B,EAAgB,GAAhBA,EAAiD,GACjDuC,EAAa,IAAMvC,EADQ,GAE3BwC,EAAc,IAAMxC,EAFmB,GAIvCyC,EAAU9C,IAAgBA,KAI1B+C,EAAapB,EAAIG,OAAO,KACzBP,KAAK,QAASqB,EAAa,GAC3BrB,KAAK,SAAUsB,EAAc,GAC7BtB,KAAK,YAHS,oBAGiBlB,EAAc,GAH/B,aAGsCA,EAAa,IAHnD,MAKbe,EAAcpB,IAAU,KAGxBqB,EAAMC,cACPC,KAAK,QAAS,UACdC,OAAO,EAAE,GAAI,IACbC,UAAU,KACVC,MAAK,SAAAxB,GAOF,MANiB,kCAA2BA,EAAEU,aAA7B,2EAC0CV,EAAE8C,mBAD5C,sEAEqC9C,EAAE+C,WAFvC,iEAGgC7B,EAAYlB,EAAEgD,cAH9C,gEAI+BhD,EAAEiD,KAJjC,kBAUnBC,EAAczB,EAAIG,OAAO,KAC1BP,KAAK,YADU,oBACgBqB,EAAa,IAD7B,UAQdS,EAASC,IAASC,cACnBC,MAAM,UACNC,aAAa,GAEbC,MAAMZ,GAELa,EAAmBhC,EAAIG,OAAO,KAC/BP,KAAK,QAAS,gBACdA,KAAK,YAFe,oBAEWqB,EAAa,EAAI,IAF5B,UAKnBgB,EAAc5D,MAGd6D,EAAaP,IAASO,aACvBH,MAAME,GACNJ,MAAM,UAENC,aAAa,IACbK,YAAY,IACZC,OAAO,cACPC,OAAO,CAAC,uBACL,GAAI,GAAI,GAAI,yBACfC,UAAU,IACVC,WAAW,IACXC,WAAW,SAEhBpB,EAAWhB,KAAKV,GAGhB,IAAM+C,EAAcpE,MACfS,OAAOT,IAAUC,GAAM,SAAAC,GAAC,OAAKA,EAAEgD,iBAC/BrC,MAAM,CAAC,GAAIwD,KAKVC,EAHwBtE,MACzBS,OAAOR,EAAKS,KAAK,SAAAR,GAAC,OAAIA,EAAEqE,iBAEsB9D,SAAS+D,OAEtDC,EAAW,IAAIC,MAAMJ,GAI3BV,EAAYnD,OAAOT,IAAUC,GAAM,SAAAC,GAAC,OAAKA,EAAEgD,iBACtCrC,MAAM,CAAC,GArFI,KAuFhBiC,EAAQrC,OAAOR,EAAKS,KAAK,SAAAR,GAAC,OAAIA,EAAEU,iBAC3BC,MANqB,CAAC,UAAW,UAAW,UAAW,UAAW,YASvEuC,EAAYrB,KAAKsB,GAEjBD,EAAYlB,UAAU,QACjBX,KAAK,OAAQ,YAGlBoC,EAAiB5B,KAAK8B,GAEtBF,EAAiBzB,UAAU,QACtBX,KAAK,OAAQ,YAGlBoC,EAAiBgB,OAAO,KAGnBpD,KAAK,OAAQ,WAGlB,IAAMqD,EAAQ5E,IAASC,EAAKuE,QACvB9D,KAAK,SAAAR,GACF,IAAI2E,GAAK5E,EAAKC,GAAGqE,aACbO,EAAIV,EAAYnE,EAAKC,GAAGgD,cAgB5B,OAdAhD,EAAI,CACA6E,QAASF,EACTG,OAAQF,EACRlE,aAAcX,EAAKC,GAAGU,aACtBoC,mBAAoB/C,EAAKC,GAAG8C,mBAC5BC,WAAYhD,EAAKC,GAAG+C,WACpBC,aAAcjD,EAAKC,GAAGgD,aACtBC,KAAMlD,EAAKC,GAAGiD,KACd3C,EAA6C,IAA1CyE,KAAKC,IAAIhF,EAAID,EAAKuE,OAAS,EAAIS,KAAKE,IAAYvC,EAAa,EAAIqC,KAAKG,SACzEpE,EAA6C,IAA1CiE,KAAKI,IAAInF,EAAID,EAAKuE,OAAS,EAAIS,KAAKE,IAAYtC,EAAc,EAAIoC,KAAKG,YAGxEX,EAASI,IAAOC,EAAIL,EAASI,GAAGG,UAAUP,EAASI,GAAK3E,GAEvDA,KAmBToF,GAfQtF,MACTuF,MAAM,SAAUvF,IAAe4C,EAAYC,EAAc,IAGzD0C,MAAM,UAkCX,WAEI,IAAIX,EACAY,EAAW,GAGf,SAASD,EAAOE,GAGZA,GAASD,EAAWC,EAEpBb,EAAMc,SAAQ,SAASxF,GACf,IAAI6E,EAAUN,EAASvE,EAAE6E,SAC7B,GAAIA,IAAY7E,EAAhB,CAEA,IAAIM,EAAIN,EAAEM,EAAIuE,EAAQvE,EAClBQ,EAAId,EAAEc,EAAI+D,EAAQ/D,EAClB2E,EAAIV,KAAKW,KAAKpF,EAAIA,EAAIQ,EAAIA,GAC1B8D,EAAI5E,EAAE8E,OAASD,EAAQC,OAE3BW,IAAMb,IACNa,GAAKA,EAAIb,GAAKa,EAAIF,EAClBvF,EAAEM,GAAKA,GAAKmF,EACZzF,EAAEc,GAAKA,GAAK2E,EACZZ,EAAQvE,GAAKA,EACbuE,EAAQ/D,GAAKA,OAerB,OATAuE,EAAMM,WAAa,SAAUC,GACzBlB,EAAQkB,GAGZP,EAAMC,SAAW,SAAAM,GAEb,OADAN,EAAgB,MAALM,EAAYN,EAAWM,EAC3BP,GAGJA,EA1EWR,GACbS,SAAS,KAEbD,MAAM,UAAWvF,KAAiB,SAAAE,GAAC,OAAIA,EAAE8E,OA7I9B,OA8IPQ,SAAS,KACTO,cAAc,IAElB1D,GAAG,QAkBR,SAAoB2D,GAChBV,EAAK/D,KAAK,MAAM,SAAArB,GAAC,OAAIA,EAAEM,KAClBe,KAAK,MAAM,SAAArB,GAAC,OAAIA,EAAEc,KAClBO,KAAK,KAAK,SAAArB,GAAC,OAAIA,EAAE8E,UACjB3C,GAAG,YAAahB,EAAIiB,MACpBD,GAAG,WAAYhB,EAAIkB,SAtBnBqC,MAAMA,GAGF7B,EAAWb,UAAU,UAC7BjC,KAAK2E,GAAOzC,QACRL,OAAO,UACPE,MAAM,QAAQ,SAAA9B,GAAC,OAAI4C,EAAQ5C,EAAE6E,QAAUT,OAEhDgB,EAAKW,aACAC,SAAS,KACTC,OAAO,SAACjG,EAAE2E,GAAH,OAAa,EAAJA,KAChBuB,UAAU,KAAK,SAAAlG,GACZ,IAAI2E,EAAI7E,IAAe,EAAGE,EAAE8E,QAC5B,OAAO,SAAAqB,GAAC,OAAInG,EAAE8E,OAASH,EAAEwB,S,+BA6DjC,OAOI,kBAAC5G,EAAA,EAAD,CAAWC,OAAK,GAER,wBAAI8C,GAAG,mBAAmB5D,UAAU,wBAApC,yBACA,yBAAK4D,GAAG,mBAAmB5D,UAAU,gBAAgB6D,IAAI,gB,GAvP9CnD,IAAMC,WCQtB+G,E,iLATP,OACI,kBAAC7G,EAAA,EAAD,CAAWC,OAAK,GACZ,kBAAC,EAAD,MACA,kBAAC6G,EAAD,W,GANMjH,IAAMC,WCSbiH,E,iLARP,OACI,kBAAC/G,EAAA,EAAD,CAAWK,MAAI,GACX,mE,GALER,IAAMC,W,yBC2NTkH,E,4LA1MS,IAAD,OACfzG,IAAOC,KAAM,SAAAC,GACT,OAAOA,KACRC,MAAK,SAAAF,GAAI,OAAI,EAAKyG,iBAAiBzG,Q,uCAGzB0G,GAIb,IAAMtG,EAAgB,GAAhBA,EAA2B,GAA3BA,EAAuC,EAAvCA,EAAgD,GAEhDC,EAAQ,IAAOD,EAAcA,EAC7BE,EAAS,IAAMF,EAAaA,EAI9BuG,EAAS,CAAC,UAAW,UAAW,UAAW,UAAW,UAAW,WAE/DC,EAAOF,EAAIG,QAAQC,MAAM,EAAE,GAE3B5D,EAAI,YAAO,IAAI6D,IAAIL,EAAIjG,KAAI,SAAAR,GAAC,OAAIA,EAAEiD,UAClC8D,EAAQ,YAAO,IAAID,IAAIL,EAAIjG,KAAI,SAAAR,GAAC,OAAIA,EAAEU,kBAOtCQ,GALUpB,IAAU,SAASkC,UAAU,UACxCjC,KAAKkD,GACLhB,QAAQL,OAAO,UACXG,MAAK,SAAA/B,GAAC,OAAIA,KAECF,IAAU,MAGxB2B,EAAM3B,IAAUnC,KAAK+D,KAAKC,QAAQC,OAAO,OAC1CP,KAAK,QAASjB,EAAQD,EAAcA,GACpCkB,KAAK,SAAUhB,EAASF,EAAaA,GAIpCG,EAAIR,MACLa,MAAM,CAACR,EAAaC,EAAQD,IAC5B6G,QAAQ,IAEPlG,EAAIhB,MACLmH,WAAW,CAAC5G,EAASF,EAAeA,IAUnC+G,GARQzF,EAAIG,OAAO,KACpBP,KAAK,YADI,uBACyBhB,EAASF,EADlC,MAETkB,KAAK,QAAQ,UAEJI,EAAIG,OAAO,KACpBP,KAAK,YADI,oBACsBlB,EADtB,SAETkB,KAAK,QAAS,UAETvB,MACLa,MAAM+F,GACNnG,OAAOoG,IAGAvF,cACXC,KAAK,QAAS,UACdC,OAAO,EAAE,EAAG,IACZC,UAAU,KACVC,MAAK,SAASxB,GAYX,MAFiB,0DAAmDA,EAAEU,aAArD,yEACwCQ,EAAYlB,EAAEe,OADtD,kBAQrB,SAASoG,EAAOC,EAAOC,GACnB,IAAMtH,EAAO0G,EAAIa,QAAO,SAAAC,GAAC,OAAIA,EAAEtE,OAASmE,KAExCrH,EAAKyF,SAAQ,SAASxF,GAElB,OADAA,EAAEe,MAAQjB,IAAO6G,GAAM,SAAAa,GAAC,OAAKxH,EAAEwH,MACxBxH,KAGXc,EAAEP,OAAO,CAAC,EAAGT,IAAOC,GAAM,SAAAC,GAAC,OAAIF,IAAO6G,GAAM,SAAAa,GAAC,OAAKxH,EAAEwH,WAAOC,OAE3DhG,EAAIO,UAAU,WACT+D,aAAaC,SAASqB,GACtBxF,KAAK/B,IAAYgB,GAAG4G,MAAM,KAAM,MAErC3H,EAAK4H,KAAK7H,IAAU,SAAS8H,SAAS,WAC5B,SAACC,EAAEC,GAAH,OAASA,EAAE/G,MAAQ8G,EAAE9G,OACrB,SAAC8G,EAAEC,GAAH,OAASf,EAASgB,QAAQF,EAAEnH,cAAgBqG,EAASgB,QAAQD,EAAEpH,gBAGzEJ,EAAEC,OAAOR,EAAKS,KAAK,SAAAR,GAAC,OAAIA,EAAEU,iBAE1Be,EAAIO,UAAU,WACT+D,aAAaC,SAASqB,GACtBxF,KAAK/B,IAAcQ,GAAG0H,cAAc,IAEzC,IAAMC,EAAQxG,EAAIO,UAAU,WACvBjC,KAAKD,MAAW6G,KAAKA,EAAhB7G,CAAsBC,IAAO,SAAAC,GAAC,OAAIA,EAAEkI,OAE9CD,EAAME,OAAOC,SAEbH,EAAMhG,QAAQL,OAAO,KAChByG,QAAQ,SAAS,GACjBhH,KAAK,QAAQ,SAAArB,GAAC,OAAIkH,EAAElH,EAAEkI,QAE3B,IAAMI,EAAO7G,EAAIO,UAAU,WAAWA,UAAU,QAC3CjC,MAAM,SAAAC,GAAC,OAAIA,KAAG,SAAA8F,GAAC,OAAIA,EAAE/F,KAAKW,gBAE/B4H,EAAKH,OAAOC,SAEZE,EAAKrG,QAAQL,OAAO,QACfP,KAAK,QAASf,EAAE4B,aAChBqG,MAAMD,GACNvC,aAAaC,SAASqB,GACtBhG,KAAK,KAAK,SAAArB,GAAC,OAAIM,EAAEN,EAAED,KAAKW,iBACxBW,KAAK,KAAK,SAAArB,GAAC,OAAIc,EAAEd,EAAE,OACnBqB,KAAK,UAAU,SAAArB,GAAC,OAAIc,EAAEd,EAAE,IAAMc,EAAEd,EAAE,OAIvC,IAAM+B,EAAON,EAAIO,UAAU,SACtBjC,KAAKA,GAAM,SAAAC,GAAC,OAAIA,EAAEU,gBAEvBqB,EAAKoG,OAAOC,SAEZrG,EAAKE,QAAQL,OAAO,QACfP,KAAK,QAAS,QACdA,KAAK,cAAe,UACpBkH,MAAMxG,GACNgE,aAAaC,SAASqB,GACtBhG,KAAK,KAAK,SAAArB,GAAC,OAAIM,EAAEN,EAAEU,cAAgBJ,EAAE4B,YAAc,KACnDb,KAAK,KAAK,SAAArB,GAAC,OAAIc,EAAEd,EAAEe,OAAS,KAC5BgB,MAAK,SAAA/B,GAAC,OAAIkB,EAAYlB,EAAEe,UA/DjCoG,EAAOrH,IAAU,SAAS8H,SAAS,SAAU,GAmE7C,IAAMnD,EAAS3E,IAAU,SACpBqC,GAAG,UAAU,kBAAMgF,EAAO1C,EAAOmD,SAAS,SAAU,QAOnDzE,GALWrD,IAAU,SACtBqC,GAAG,SAAS,kBAAMgF,EAAO1C,EAAOmD,SAAS,SAAU,QAIzCnG,EAAIO,UAAU,WACxBjC,KAAK2G,GACLzE,QAAQL,OAAO,KACXP,KAAK,QAAS,UACdA,KAAK,aAAa,SAACrB,EAAE2E,GAAH,gCAAgC,GAAJA,EAA5B,SAE3BxB,EAAOvB,OAAO,QACTP,KAAK,IAAKjB,EAAQ,IAClBiB,KAAK,QAAS,IACdA,KAAK,SAAU,IACfS,MAAM,QAAQ,SAAC9B,EAAE2E,GAAH,OAAS+B,EAAOG,QAAQ2B,UAAU7D,MAErDxB,EAAOvB,OAAO,QACTP,KAAK,IAAKjB,EAAQ,GAClBiB,KAAK,IAAK,GACVA,KAAK,KAAM,UACXS,MAAM,cAAe,SACrBC,MAAM,SAAC/B,EAAE2E,GAEN,OAAQA,GACJ,KAAK,EAAG,MAAO,cACf,KAAK,EAAG,MAAO,wBACf,KAAK,EAAG,MAAO,qBACf,KAAK,EAAG,MAAO,gCACf,KAAK,EAAG,MAAO,4BACf,KAAK,EAAG,MAAO,8B,+BAW3B,OACI,kBAACpF,EAAA,EAAD,CAAWC,OAAK,GACZ,kDACA,yBAAK8C,GAAG,mBAAmB5D,UAAU,gBAAgB6D,IAAI,WAF7D,eAII,4BAAQD,GAAG,SACX,2BAAOmG,KAAK,WAAWnG,GAAG,SAL9B,mB,GAhMiBlD,IAAMC,WCsBpBqJ,MAxBf,WACE,OACE,6BACA,6BAAK,uCACL,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAO,EAAMC,UAAWvJ,IACxC,kBAAC,IAAD,CAAOqJ,KAAK,mBAAmBC,OAAO,EAAMC,UAAWvJ,IACvD,kBAAC,IAAD,CAAOqJ,KAAK,SAASC,OAAO,EAAMC,UAAWlJ,IAE7C,kBAAC,IAAD,CAAOgJ,KAAK,QAAQC,OAAO,EAAMC,UAAWrG,IAC5C,kBAAC,IAAD,CAAOmG,KAAK,QAAQC,OAAO,EAAMC,UAAWxC,IAC5C,kBAAC,IAAD,CAAOsC,KAAK,cAAcC,OAAO,EAAMC,UAAWzC,IAClD,kBAAC,IAAD,CAAOuC,KAAK,OAAOC,OAAO,EAAMC,UAAWvC,IAC3C,kBAAC,IAAD,CAAOqC,KAAK,iBAAiBC,OAAO,EAAMC,UAAWhJ,IAErD,kBAAC,IAAD,CAAO8I,KAAK,mBAAmBC,OAAO,EAAMC,UAAWtC,QCrB3CuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,OCXNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD0H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxJ,MAAK,SAAAyJ,GACjCA,EAAaC,iB,mBEnInBC,EAAOC,QAAU,IAA0B,uF,mBCA3CD,EAAOC,QAAU,IAA0B,8C,mBCA3CD,EAAOC,QAAU,IAA0B,0C,mBCA3CD,EAAOC,QAAU,IAA0B,4C,mBCA3CD,EAAOC,QAAU,IAA0B,oC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,kC,mBCA3CD,EAAOC,QAAU,IAA0B,iC","file":"static/js/main.6d4c0ff6.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport DEPLogo from '../images/New_York_City_Department_of_Environmental_Protection_logo.png';\r\n// import DEPLogo from '../images/nyc-ep01.png';\r\nimport DataLogo from '../images/NYCOpenData_Logo.png';\r\n// import DataLogo from '../images/NYCOpenData_Logo-02.png';\r\nimport TwitterLogo from '../images/Logo-twitter.png';\r\nimport GithubLogo from '../images/GitHub-Logo-03.png';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Navbar color=\"dark\" dark expand=\"md\" >\r\n                {/* <NavbarBrand tag={Link} to=\"https://www1.nyc.gov/site/dep/index.page\"><img src={DEPLogo} alt=\"DEP Logo\" /></NavbarBrand>\r\n                <NavbarBrand tag={Link} to=\"https://data.cityofnewyork.us/Environment/Water-and-Sewer-Permits/4k4u-823g\"><img src={DataLogo} alt=\"Open Data Logo\" /></NavbarBrand> */}\r\n                <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\r\n                <NavbarBrand tag={Link} to=\"/about\">About</NavbarBrand>\r\n                <NavbarToggler onClick={this.toggle} />\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-img\" href=\"https://www1.nyc.gov/site/dep/index.page\"><img src={DEPLogo} alt=\"DEP Logo\" /></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-img\" href=\"https://data.cityofnewyork.us/Environment/Water-and-Sewer-Permits/4k4u-823g\"><img src={DataLogo} alt=\"Open Data Logo\" /></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            {/* <NavLink className=\"nav-item\" href=\"https://twitter.com/_nate_hunter_\">@_nate_hunter_</NavLink> */}\r\n                            <NavLink className=\"nav-img\" href=\"https://twitter.com/_nate_hunter_\"><img src={TwitterLogo} alt=\"Twitter Logo\" /></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            {/* <NavLink className=\"nav-item\" href=\"https://github.com/nate-hunter\">GitHub</NavLink> */}\r\n                            <NavLink className=\"nav-img\" href=\"https://github.com/nate-hunter\"><img src={GithubLogo} alt=\"Github Logo\" /></NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n        );\r\n    };\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container } from 'reactstrap';\r\n// import NavBar from './NavBar'\r\n\r\nclass Home extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                {/* <NavBar /> */}\r\n                <h1>PROJECT HOME PAGE</h1>\r\n                <h1>PROJECT HOME PAGE</h1>\r\n                <Container fluid>\r\n                    <Button outline color=\"primary\"><Link to=\"/2018\">2018</Link></Button>{' '}\r\n                    <Button outline color=\"primary\"><Link to=\"/2019\">2019</Link></Button>{' '}\r\n                    <Button outline color=\"primary\"><Link to=\"/comparison\">COMPARE YEARS</Link></Button>{' '}\r\n                    {/* <Button outline color=\"primary\"><Link to=\"/barchart\">ALL</Link></Button>{' '} */}\r\n                    <Button outline color=\"primary\"><Link to=\"/barchart-test\">ALL PERMITS (BAR)</Link></Button>{' '}\r\n                    <Button outline color=\"primary\"><Link to=\"/map\">MAP</Link></Button>{' '}\r\n                    {/* <Button color=\"link\"><Link to=\"/clusterchart-test\">2018 CLUSTER TEST</Link></Button>{' '} */}\r\n                    <Button color=\"warning\"><Link to=\"/stackedchart-sb\">STACKED CHART TEST</Link></Button>{' '}\r\n                    {/* <Button color=\"info\"><Link to=\"/stackedchart-sb\"></Link>STACKED CHART TEST</Button>{' '} */}\r\n                </Container>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nconst About = () => {\r\n    return(\r\n        <Container flex>\r\n            <h2>ABOUT THIS PROJECT</h2>\r\n            <p>This project...</p>\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport { Container } from 'reactstrap';\r\n// import NavBar from '../components/NavBar';\r\n// import data from './data/all.csv';\r\nimport data from '../data/totals.csv';\r\nimport d3Tip from 'd3-tip';\r\n\r\nclass AllBarChart extends React.Component {\r\n\r\n    componentDidMount(){\r\n        d3.csv(data, function(d) {\r\n            // console.log('d',d)\r\n            return d;\r\n        })\r\n        .then(data => {\r\n            // console.log(\"DATA --\", data)\r\n            this.drawBarChartTest(data)\r\n        })\r\n    }\r\n\r\n    drawBarChartTest(data){\r\n        const margin = { top: 40, right: 20, bottom: 30, left: 40 },\r\n            width = 960 - margin.left - margin.right,\r\n            height = 500 - margin.top - margin.bottom;\r\n\r\n        //---------------------------AXIS---------------------------------\r\n        // const formatPerscent = d3.format(\".0%\");\r\n    \r\n        const x = d3.scaleBand()\r\n            .domain(data.map(item => item.borough_name))\r\n            // .range([0, canvasWidth - 100])\r\n            .range([0, width])\r\n            .paddingInner(0.2)\r\n            .paddingOuter(0.2);\r\n\r\n        const y = d3.scaleLinear()\r\n            .domain( [0, d3.max(data, d => d.total)] )\r\n            .range([height, 0]);\r\n\r\n        const xAxis = d3.axisBottom(x);\r\n        const yAxis = d3.axisLeft(y);\r\n        \r\n        //---------------------------TIP---------------------------------\r\n        const formatComma = d3.format(\",\");\r\n\r\n        const tip = d3Tip()\r\n            .attr(\"class\", \"d3-tip\")\r\n            .offset([-2, 0])\r\n            .direction(\"n\")\r\n            .html(function(d) {\r\n                // const mainHTML = \"<div id='thumbnail'><h3>\" + d.borough_name + \"</h3></div>\"\r\n                // +\"PERMIT TAP\" + \": <span style='color:orange'>\" + formatComma(d.permit_tap) + \"</span>\"\r\n                // +\"<p>SEWER PERMIT - INSTALL: \" + \"<span style='color:orangered'>\" + formatComma(d.sewer_permit_install)+\"</span> </p>\"\r\n                // +\"<p>SEWER PERMIT - PLUG: \" + \"<span style='color:orange'>\" + formatComma(d.sewer_permit_plug)+\"</span> </p>\"\r\n                // +\"<p>SEWER PERMIT - CATCH BASIN (MAN): \" + \"<span style='color:orange'>\" + formatComma(d.sewer_permit_ctch_basin_man)+\"</span> </p>\"\r\n                // +\"<p>SEWER PERMIT - CATCH BASIN: \" + \"<span style='color:orange'>\" + d.sewer_permit_ctch_basin+\"</span> </p>\"\r\n                // +\"<p>SEWER PERMIT - PRIVATE: \" + \"<span style='color:orange'>\" +d.sewer_permit_private+\"</span> </p>\"\r\n                // +\"<p>TOTAL PERMITS: \" + \"<span style='color:orangered'>\" +d.total+\"</span> </p>\";\r\n\r\n                const mainHTML = `<div id='thumbnail'><h3 style='color:steelblue'>${d.borough_name}</h3></div>` \r\n                    + `<p>TOTAL PERMITS: <span style='color:orangered'>${formatComma(d.total)}</span></p>`\r\n                return mainHTML;\r\n            })\r\n\r\n        //---------------------------BUILD SVG---------------------------------\r\n        const svg = d3.select(this.refs.canvas).append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            // .style(\"border\", \"1px solid black\")\r\n            .append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n        svg.call(tip);\r\n\r\n        //---------------------------BUILD AXIS---------------------------------\r\n        svg.append(\"g\")\r\n            .attr(\"class\", \"x axis\")\r\n            .attr(\"transform\", `translate(0, ${height})`)\r\n            .call(xAxis);\r\n        \r\n        svg.append(\"g\")\r\n            .attr(\"class\", \"y axis\")\r\n            .call(yAxis)\r\n            .append(\"text\")\r\n            .attr(\"transform\", \"rotate(-90)\")\r\n            .attr(\"y\", 6)\r\n            .attr(\"dy\", \".71em\")\r\n            .style(\"text-anchor\", \"end\")\r\n            .text(\"Permits\");\r\n\r\n        //---------------------------USE DATA---------------------------------\r\n        svg.selectAll(\".bar\")\r\n            .data(data)\r\n            .enter().append(\"rect\")\r\n                .attr(\"class\", \"bar\")\r\n                .attr(\"x\", (d) => x(d.borough_name) )\r\n                .attr(\"width\", x.bandwidth)\r\n                .attr(\"y\", d => y(d.total) )\r\n                .attr(\"height\", d => height - y(d.total) )\r\n                .on('mouseover', tip.show)\r\n                .on('mouseout', tip.hide)\r\n\r\n\r\n\r\n\r\n\r\n\r\n        //------bottom of drawBarChartTest()-----\r\n    }\r\n    \r\n\r\n/*\r\n//======================ORIGINAL FUNCTION==========================//\r\n    drawBarChart(data){\r\n        // console.log(\"D\", data)\r\n        const canvas = d3.select(this.refs.canvas);\r\n        \r\n        const canvasWidth = 700;\r\n        const canvasHeight = 600;\r\n\r\n        const svg = canvas.append(\"svg\")\r\n            .attr(\"width\", canvasWidth)\r\n            .attr(\"height\", canvasHeight)\r\n            .style(\"border\", \"0.5px solid black\");\r\n\r\n        const margin = { top: 30, right: 30, bottom: 70, left: 70 }\r\n        const graphWidth = 600 - margin.left - margin.right;\r\n        const graphHeight = 600 - margin.top - margin.bottom;\r\n\r\n        const graph = svg.append(\"g\")\r\n            .attr(\"width\", graphWidth)\r\n            .attr(\"height\", graphHeight)\r\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n        // const rect = graph.selectAll(\"rect\");\r\n\r\n        //---------------------------AXIS---------------------------------\r\n        const xAxisGroup = graph.append(\"g\")\r\n            .attr(\"transform\", `translate(0, ${graphHeight})`)\r\n        const yAxisGroup = graph.append(\"g\");\r\n        \r\n        const x = d3.scaleBand()\r\n            .domain(data.map(item => item.borough_name))\r\n            // .range([0, canvasWidth - 100])\r\n            .range([0, canvasWidth - 100])\r\n            .paddingInner(0.2)\r\n            .paddingOuter(0.2);\r\n\r\n        const y = d3.scaleLinear()\r\n            .domain( [0, d3.max(data, d => d.total)] )\r\n            .range([graphHeight, 0]);\r\n\r\n        const xAxis = d3.axisBottom(x);\r\n        const yAxis = d3.axisLeft(y);\r\n\r\n        xAxisGroup.call(xAxis)\r\n        yAxisGroup.call(yAxis);\r\n\r\n        //---------------------------TIP---------------------------------\r\n        // const formatComma = d3.format(\",\");\r\n        // console.log(d3Tip);\r\n        const tip = d3Tip()\r\n            .attr(\"class\", \"d3-tip\")\r\n            .offset([0, -3])\r\n            .direction(\"e\")\r\n            // .html(function(d) {\r\n            //     const mainHTML = \"<div id='thumbnail'><h3> Form: \" + d.borough_name + \"</h3></div>\"\r\n            //     +\"Pending\" + \": <span style='color:orange'>\" + formatComma(d.permit_tap) + \"</span>\"\r\n            //     +\"<p>Denied: \" + \"<span style='color:orangered'>\" + formatComma(d.sewer_permit_install)+\"</span> </p>\"\r\n            //     +\"<p>Approved: \" + \"<span style='color:orange'>\" + formatComma(d.sewer_permit_plug)+\"</span> </p>\"\r\n            //     +\"<p>Total Received: \" + \"<span style='color:orange'>\" + formatComma(d.sewer_permit_ctch_basin_man)+\"</span> </p>\"\r\n            //     +\"<p>Description: \" + \"<span style='color:orange'>\" + d.sewer_permit_ctch_basin+\"</span> </p>\"\r\n            //     +\"<p>Base Type: \" + \"<span style='color:orange'>\" +d.sewer_permit_private+\"</span> </p>\"\r\n            //     +\"<p>Base Type: \" + \"<span style='color:orangered'>\" +d.total+\"</span> </p>\";\r\n            //     return mainHTML;\r\n            // })\r\n\r\n        graph.call(tip);\r\n\r\n\r\n        //---------------------------RECTS---------------------------------\r\n        const rect = graph.selectAll(\"rect\");\r\n\r\n        rect.data(data)\r\n            .enter()\r\n                .append(\"rect\")\r\n                .attr(\"width\", x.bandwidth)\r\n                .attr(\"height\", (d,i) => graphHeight - y(d.total))\r\n                // .attr(\"height\", (d,i) => {\r\n                //     console.log(d)\r\n                // })\r\n                .style(\"fill\", \"slateGrey\")\r\n                .attr(\"x\", (d,i) => x(d.borough_name))\r\n                .attr(\"y\", (d,i) => y(d.total))\r\n                .on(\"tick\", layoutTick)\r\n                // .on(\"mouseover\", (d,i,n) => {\r\n                    \r\n                //     d3.select(n[i])\r\n                //     .transition()\r\n                //     .duration(100)\r\n                //     .style(\"fill\", \"orangered\")\r\n                // })\r\n                .on(\"mouseover\", tip.show)\r\n                .on(\"mouseout\", (d,i,n) => {\r\n                    d3.select(n[i])\r\n                        .transition()\r\n                        .duration(100)\r\n                        .style(\"fill\", \"slateGrey\")\r\n                    })\r\n\r\n        //~~~~~~~~~~~~~~~~~~~~~~\r\n        function layoutTick(e){\r\n            // debugger\r\n            console.log(e)\r\n            rect.on(\"mouseover\", tip.show)\r\n                .on(\"mouseout\", tip.hide)\r\n        }\r\n        //~~~~~~~~~~~~~~~~~~~~~~\r\n\r\n    \r\n    \r\n        // rect.on(\"mouseover\", (d,i,n) => {\r\n        //     d3.select(n[i])\r\n        //         .transition()\r\n        //         .duration(100)\r\n        //         .style(\"fill\", \"orangered\")\r\n        // })\r\n        //     .on(\"mouseout\", (d,i,n) => {\r\n        //     d3.select(n[i])\r\n        //         .transition()\r\n        //         .duration(100)\r\n        //         .style(\"fill\", \"slateGrey\")\r\n        //     });\r\n    }\r\n    */\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Container fluid>\r\n                {/* <NavBar /> */}\r\n                <h2 id=\"bar-chart-sb\" className=\"bar-chart-header\">WATER AND SEWER PERMITS GRANTED (ALL YEARS)</h2>\r\n                <div id=\"bar-chart-sb\" className=\"bar-chart\" ref=\"canvas\"></div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllBarChart;","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport { Container } from 'reactstrap';\r\n// import NavBar from '../components/NavBar';\r\n// import data from './data/all.csv';\r\nimport data from '../data/2018.csv';\r\nimport d3Tip from 'd3-tip';\r\nimport d3Legend from 'd3-svg-legend';\r\n\r\nclass ClusterChart2018 extends React.Component {\r\n\r\n    componentDidMount(){\r\n        d3.csv(data, d => d)\r\n        .then(data => {\r\n            this.drawClusterChart(data)\r\n        })\r\n    }\r\n\r\n    drawClusterChart(data) {\r\n        const canvas = d3.select(this.refs.canvas);\r\n\r\n        const svg = canvas.append(\"svg\")\r\n            .attr(\"width\", 1000)\r\n            .attr(\"height\", 900)\r\n            .style(\"border\", \"1px solid black\")\r\n\r\n        const padding = 1.5, \r\n            // clusterPadding = 16, \r\n            maxRadius = 15;\r\n        \r\n        const margin = { top: 20, right: 20, bottom: 70, left: 70 }\r\n        const graphWidth = 600 - margin.left - margin.right;\r\n        const graphHeight = 600 - margin.top - margin.bottom;\r\n        \r\n        const mColors = d3.scaleOrdinal(d3['schemeSet2']);\r\n        // const mColors = d3.scaleOrdinal(d3['schemeBrBG']);\r\n        // const mColors = d3.scaleOrdinal(d3.schemeBlues[5]);\r\n\r\n        const mainCanvas = svg.append(\"g\")\r\n            .attr(\"width\", graphWidth / 2 )\r\n            .attr(\"height\", graphHeight / 2 )\r\n            .attr(\"transform\", `translate(${margin.left - 40}, ${margin.top + 160})`);\r\n        \r\n        const formatComma = d3.format(\",\");\r\n\r\n        //---------------------------TIP---------------------------------\r\n        const tip = d3Tip()\r\n            .attr(\"class\", \"d3-tip\")\r\n            .offset([-2, -3])\r\n            .direction(\"n\")\r\n            .html(d => {\r\n                const mainHtml = `<div id='thumbnail'><h3>${d.borough_name}</h3></div>`\r\n                    + `<p>Permit Description: <span style='color:orange'>${d.permit_description}</span></p>`\r\n                    + `<p>Service Order: <span style='color:orange'>${d.serv_order}</span></p>`\r\n                    + `<p>Total: <span style='color:orangered'>${formatComma(d.permit_count)}</span></p>`\r\n                    + `<p>Year: <span style='color:steelblue'>${d.year}</span></p>`\r\n               \r\n                return mainHtml;\r\n            })\r\n        \r\n        //---------------------------LEGEND---------------------------------\r\n        const legendGroup = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${graphWidth + 300}, 30)`);\r\n            // .attr(\"transform\", `translate(${graphWidth + 100}, 30)`);\r\n\r\n        //!!!!!!!!!!!!!!!!!! NEED TO IMPORT LEGEND !!!!!!!!!!!!!!!!!!!!!!!\r\n        // LINK =>>> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-legend/2.25.6/d3-legend.min.js\"></script>\r\n        // console.log(d3Legend);\r\n        // const legend = d3.legendColor()\r\n        const legend = d3Legend.legendColor()\r\n            .shape(\"circle\")\r\n            .shapePadding(4)\r\n            // .title(\"THIS IS THE LEGEND\")\r\n            .scale(mColors);\r\n\r\n        const scaleLegendGroup = svg.append(\"g\")\r\n            .attr(\"class\", \"scale-legend\")\r\n            .attr(\"transform\", `translate(${graphWidth / 2 - 150}, 30)`);\r\n            // .attr(\"transform\", `translate(${graphWidth / 2 - 100}, 30)`);\r\n\r\n        const scaleLegend = d3.scaleLinear();\r\n\r\n        //!!!!!!!!!!!!!!!!!! NEED TO IMPORT LEGEND !!!!!!!!!!!!!!!!!!!!!!!\r\n        const legendSize = d3Legend.legendSize()\r\n            .scale(scaleLegend)\r\n            .shape(\"circle\")\r\n            // .title(\"Size Legend\")\r\n            .shapePadding(12)\r\n            .labelOffset(20)\r\n            .orient(\"horizontal\")\r\n            .labels([\"Less Permits Granted\",\r\n                \"\", \"\", \"\", \"More Permits Granted\"])\r\n            .labelWrap(30)\r\n            .shapeWidth(40)\r\n            .labelAlign(\"start\"); \r\n\r\n        mainCanvas.call(tip);\r\n\r\n        //---------------------------USE DATA---------------------------------\r\n        const radiusScale = d3.scaleLinear()\r\n            .domain(d3.extent(data, d => +d.permit_count ))\r\n            .range([10, maxRadius + 80])\r\n\r\n        const numberOfBoroughsScale = d3.scaleOrdinal()\r\n            .domain(data.map( d => d.borough_code ))\r\n\r\n        const distinctBoroughScale = numberOfBoroughsScale.domain().length;\r\n\r\n        const clusters = new Array(distinctBoroughScale);\r\n\r\n        const legendColorsArray = [\"#66c2a5\", \"#fc8d62\", \"#8da0cb\", \"#e78ac3\", \"#a6d854\"]\r\n \r\n        scaleLegend.domain(d3.extent(data, d => +d.permit_count ))\r\n            .range([10, maxRadius])\r\n\r\n        mColors.domain(data.map( d => d.borough_name ))\r\n            .range(legendColorsArray);\r\n\r\n        //!!!!!!!!!!!!!!!!!! NEED TO IMPORT LEGEND !!!!!!!!!!!!!!!!!!!!!!!\r\n        legendGroup.call(legend);\r\n\r\n        legendGroup.selectAll(\"text\")\r\n            .attr(\"fill\", \"darkblue\")\r\n            // .attr(\"fill\", \"white\")\r\n\r\n        scaleLegendGroup.call(legendSize);\r\n\r\n        scaleLegendGroup.selectAll(\"text\")\r\n            .attr(\"fill\", \"darkblue\")\r\n            // .attr(\"fill\", \"white\")\r\n            \r\n        scaleLegendGroup.select(\"g\")\r\n            // .attr(\"fill\", \"darkblue\")\r\n            // .attr(\"fill\", \"orangered\")\r\n            .attr(\"fill\", \"#8da0cb\")\r\n\r\n        //---------------------------BUILD NODES---------------------------------\r\n        const nodes = d3.range(data.length)\r\n            .map( d => {\r\n                let i = +data[d].borough_code;\r\n                let r = radiusScale(data[d].permit_count);\r\n\r\n                d = {\r\n                    cluster: i,\r\n                    radius: r,\r\n                    borough_name: data[d].borough_name,\r\n                    permit_description: data[d].permit_description,\r\n                    serv_order: data[d].serv_order,\r\n                    permit_count: data[d].permit_count,\r\n                    year: data[d].year,\r\n                    x: Math.cos(d / data.length * 2 * Math.PI) * 200 + graphWidth / 2 + Math.random(),\r\n                    y: Math.sin(d / data.length * 2 * Math.PI) * 200 + graphHeight / 2 + Math.random()\r\n                }\r\n\r\n                if ( !clusters[i] || (r > clusters[i].radius) ) clusters[i] = d;    // NOT 100% SURE WHAT'S GOING ON HERE \r\n\r\n                return d;\r\n            })\r\n\r\n        //---------------------------USING THE FORCE---------------------------------\r\n        const force = d3.forceSimulation()\r\n            // .force(\"center\", d3.forceCenter(graphWidth, graphHeight))\r\n            .force(\"center\", d3.forceCenter(graphWidth, graphHeight / 2))\r\n            // .force(\"center\", d3.forceCenter(graphWidth / 2, graphHeight / 2))\r\n\r\n            .force(\"cluster\", cluster()\r\n                .strength(.6))\r\n            \r\n            .force(\"collide\", d3.forceCollide( d => d.radius + padding )\r\n                .strength(0.9))\r\n                .velocityDecay(0.7)\r\n\r\n            .on(\"tick\", layoutTick)\r\n                .nodes(nodes);\r\n\r\n        //---------------------------BUILD NODE---------------------------------\r\n        const node = mainCanvas.selectAll(\"circle\")\r\n            .data(nodes).enter()\r\n                .append(\"circle\")\r\n                .style(\"fill\", d => mColors(d.cluster / distinctBoroughScale) )\r\n\r\n        node.transition()\r\n            .duration(1000)\r\n            .delay( (d,i) => i * 5 )\r\n            .attrTween(\"r\", d => {\r\n                let i = d3.interpolate(0, d.radius);\r\n                return t => d.radius = i(t);\r\n            })\r\n\r\n        //---------------------------LAYOUT-TICK FUNK---------------------------------\r\n        function layoutTick(e) {\r\n            node.attr(\"cx\", d => d.x )\r\n                .attr(\"cy\", d => d.y )\r\n                .attr(\"r\", d => d.radius )\r\n                .on(\"mouseover\", tip.show)\r\n                .on(\"mouseout\", tip.hide)\r\n        }\r\n\r\n        //---------------------------CLUSTER FUNK---------------------------------\r\n        function cluster() {\r\n        \r\n            var nodes,\r\n                strength = 0.1;\r\n                // strength = 0.1;\r\n\r\n            function force (alpha) {\r\n\r\n                // scale + curve alpha value\r\n                alpha *= strength * alpha;\r\n\r\n                nodes.forEach(function(d) {\r\n                        var cluster = clusters[d.cluster];\r\n                    if (cluster === d) return;\r\n                \r\n                    let x = d.x - cluster.x,\r\n                        y = d.y - cluster.y,\r\n                        l = Math.sqrt(x * x + y * y),\r\n                        r = d.radius + cluster.radius;\r\n\r\n                if (l !== r) {\r\n                    l = (l - r) / l * alpha;\r\n                    d.x -= x *= l;\r\n                    d.y -= y *= l;\r\n                    cluster.x += x;\r\n                    cluster.y += y;\r\n                }\r\n                });\r\n\r\n            }\r\n\r\n            force.initialize = function (_) {\r\n                nodes = _;\r\n            }\r\n\r\n            force.strength = _ => {\r\n                strength = _ == null ? strength : _;\r\n                return force;\r\n            };\r\n\r\n            return force;\r\n        }\r\n\r\n\r\n        //------bottom of drawClusterChart()-----\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container fluid>\r\n                {/* <NavBar /> */}\r\n                    <h2 id=\"cluster-chart-sb\" className=\"cluster-chart-header\">2018 DATA IN CLUSTERS</h2>\r\n                    <div id=\"cluster-chart-sb\" className=\"cluster-chart\" ref=\"canvas\"></div>\r\n            </Container>\r\n            // <div className=\"test\">\r\n            //     <NavBar />\r\n            //         <h2 id=\"cluster-chart-sb\" className=\"cluster-chart-header\">2018 DATA IN CLUSTERS</h2>\r\n            //         <div id=\"cluster-chart-sb\" className=\"cluster-chart\" ref=\"canvas\"></div>\r\n            // </div>\r\n                        \r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default ClusterChart2018;","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport { Container } from 'reactstrap';\r\n// import NavBar from '../components/NavBar';\r\n// import data from './data/all.csv';\r\nimport data from '../data/2019.csv';\r\nimport d3Tip from 'd3-tip';\r\nimport d3Legend from 'd3-svg-legend';\r\n\r\nclass ClusterChart2018 extends React.Component {\r\n\r\n    componentDidMount(){\r\n        d3.csv(data, d => d)\r\n        .then(data => {\r\n            this.drawClusterChart(data)\r\n        })\r\n    }\r\n\r\n    drawClusterChart(data) {\r\n        const canvas = d3.select(this.refs.canvas);\r\n\r\n        const svg = canvas.append(\"svg\")\r\n            .attr(\"width\", 1000)\r\n            .attr(\"height\", 900)\r\n            .style(\"border\", \"1px solid black\")\r\n\r\n        const padding = 1.5, \r\n            // clusterPadding = 16, \r\n            maxRadius = 15;\r\n        \r\n        const margin = { top: 20, right: 20, bottom: 70, left: 70 }\r\n        const graphWidth = 600 - margin.left - margin.right;\r\n        const graphHeight = 600 - margin.top - margin.bottom;\r\n        \r\n        const mColors = d3.scaleOrdinal(d3['schemeSet2']);\r\n        // const mColors = d3.scaleOrdinal(d3['schemeBrBG']);\r\n        // const mColors = d3.scaleOrdinal(d3.schemeBlues[5]);\r\n\r\n        const mainCanvas = svg.append(\"g\")\r\n            .attr(\"width\", graphWidth / 2 )\r\n            .attr(\"height\", graphHeight / 2 )\r\n            .attr(\"transform\", `translate(${margin.left - 40}, ${margin.top + 160})`);\r\n        \r\n        const formatComma = d3.format(\",\");\r\n\r\n        //---------------------------TIP---------------------------------\r\n        const tip = d3Tip()\r\n            .attr(\"class\", \"d3-tip\")\r\n            .offset([-2, -3])\r\n            .direction(\"n\")\r\n            .html(d => {\r\n                const mainHtml = `<div id='thumbnail'><h3>${d.borough_name}</h3></div>`\r\n                    + `<p>Permit Description: <span style='color:orange'>${d.permit_description}</span></p>`\r\n                    + `<p>Service Order: <span style='color:orange'>${d.serv_order}</span></p>`\r\n                    + `<p>Total: <span style='color:orangered'>${formatComma(d.permit_count)}</span></p>`\r\n                    + `<p>Year: <span style='color:steelblue'>${d.year}</span></p>`\r\n               \r\n                return mainHtml;\r\n            })\r\n        \r\n        //---------------------------LEGEND---------------------------------\r\n        const legendGroup = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${graphWidth + 300}, 30)`);\r\n            // .attr(\"transform\", `translate(${graphWidth + 100}, 30)`);\r\n\r\n        //!!!!!!!!!!!!!!!!!! NEED TO IMPORT LEGEND !!!!!!!!!!!!!!!!!!!!!!!\r\n        // LINK =>>> <script src=\"https://cdnjs.cloudflare.com/ajax/libs/d3-legend/2.25.6/d3-legend.min.js\"></script>\r\n        // console.log(d3Legend);\r\n        // const legend = d3.legendColor()\r\n        const legend = d3Legend.legendColor()\r\n            .shape(\"circle\")\r\n            .shapePadding(4)\r\n            // .title(\"THIS IS THE LEGEND\")\r\n            .scale(mColors);\r\n\r\n        const scaleLegendGroup = svg.append(\"g\")\r\n            .attr(\"class\", \"scale-legend\")\r\n            .attr(\"transform\", `translate(${graphWidth / 2 - 150}, 30)`);\r\n            // .attr(\"transform\", `translate(${graphWidth / 2 - 100}, 30)`);\r\n\r\n        const scaleLegend = d3.scaleLinear();\r\n\r\n        //!!!!!!!!!!!!!!!!!! NEED TO IMPORT LEGEND !!!!!!!!!!!!!!!!!!!!!!!\r\n        const legendSize = d3Legend.legendSize()\r\n            .scale(scaleLegend)\r\n            .shape(\"circle\")\r\n            // .title(\"Size Legend\")\r\n            .shapePadding(12)\r\n            .labelOffset(20)\r\n            .orient(\"horizontal\")\r\n            .labels([\"Less Permits Granted\",\r\n                \"\", \"\", \"\", \"More Permits Granted\"])\r\n            .labelWrap(30)\r\n            .shapeWidth(40)\r\n            .labelAlign(\"start\"); \r\n\r\n        mainCanvas.call(tip);\r\n\r\n        //---------------------------USE DATA---------------------------------\r\n        const radiusScale = d3.scaleLinear()\r\n            .domain(d3.extent(data, d => +d.permit_count ))\r\n            .range([10, maxRadius + 80])\r\n\r\n        const numberOfBoroughsScale = d3.scaleOrdinal()\r\n            .domain(data.map( d => d.borough_code ))\r\n\r\n        const distinctBoroughScale = numberOfBoroughsScale.domain().length;\r\n\r\n        const clusters = new Array(distinctBoroughScale);\r\n\r\n        const legendColorsArray = [\"#66c2a5\", \"#fc8d62\", \"#8da0cb\", \"#e78ac3\", \"#a6d854\"]\r\n \r\n        scaleLegend.domain(d3.extent(data, d => +d.permit_count ))\r\n            .range([10, maxRadius])\r\n\r\n        mColors.domain(data.map( d => d.borough_name ))\r\n            .range(legendColorsArray);\r\n\r\n        //!!!!!!!!!!!!!!!!!! NEED TO IMPORT LEGEND !!!!!!!!!!!!!!!!!!!!!!!\r\n        legendGroup.call(legend);\r\n\r\n        legendGroup.selectAll(\"text\")\r\n            .attr(\"fill\", \"darkblue\")\r\n            // .attr(\"fill\", \"white\")\r\n\r\n        scaleLegendGroup.call(legendSize);\r\n\r\n        scaleLegendGroup.selectAll(\"text\")\r\n            .attr(\"fill\", \"darkblue\")\r\n            // .attr(\"fill\", \"white\")\r\n            \r\n        scaleLegendGroup.select(\"g\")\r\n            // .attr(\"fill\", \"darkblue\")\r\n            // .attr(\"fill\", \"orangered\")\r\n            .attr(\"fill\", \"#8da0cb\")\r\n\r\n        //---------------------------BUILD NODES---------------------------------\r\n        const nodes = d3.range(data.length)\r\n            .map( d => {\r\n                let i = +data[d].borough_code;\r\n                let r = radiusScale(data[d].permit_count);\r\n\r\n                d = {\r\n                    cluster: i,\r\n                    radius: r,\r\n                    borough_name: data[d].borough_name,\r\n                    permit_description: data[d].permit_description,\r\n                    serv_order: data[d].serv_order,\r\n                    permit_count: data[d].permit_count,\r\n                    year: data[d].year,\r\n                    x: Math.cos(d / data.length * 2 * Math.PI) * 200 + graphWidth / 2 + Math.random(),\r\n                    y: Math.sin(d / data.length * 2 * Math.PI) * 200 + graphHeight / 2 + Math.random()\r\n                }\r\n\r\n                if ( !clusters[i] || (r > clusters[i].radius) ) clusters[i] = d;    // NOT 100% SURE WHAT'S GOING ON HERE \r\n\r\n                return d;\r\n            })\r\n\r\n        //---------------------------USING THE FORCE---------------------------------\r\n        const force = d3.forceSimulation()\r\n            .force(\"center\", d3.forceCenter(graphWidth, graphHeight / 2))\r\n            // .force(\"center\", d3.forceCenter(graphWidth / 2, graphHeight / 2))\r\n\r\n            .force(\"cluster\", cluster()\r\n                .strength(.6))\r\n            \r\n            .force(\"collide\", d3.forceCollide( d => d.radius + padding )\r\n                .strength(0.9))\r\n                .velocityDecay(0.7)\r\n\r\n            .on(\"tick\", layoutTick)\r\n                .nodes(nodes);\r\n\r\n        //---------------------------BUILD NODE---------------------------------\r\n        const node = mainCanvas.selectAll(\"circle\")\r\n            .data(nodes).enter()\r\n                .append(\"circle\")\r\n                .style(\"fill\", d => mColors(d.cluster / distinctBoroughScale) )\r\n\r\n        node.transition()\r\n            .duration(1000)\r\n            .delay( (d,i) => i * 5 )\r\n            .attrTween(\"r\", d => {\r\n                let i = d3.interpolate(0, d.radius);\r\n                return t => d.radius = i(t);\r\n            })\r\n\r\n        //---------------------------LAYOUT-TICK FUNK---------------------------------\r\n        function layoutTick(e) {\r\n            node.attr(\"cx\", d => d.x )\r\n                .attr(\"cy\", d => d.y )\r\n                .attr(\"r\", d => d.radius )\r\n                .on(\"mouseover\", tip.show)\r\n                .on(\"mouseout\", tip.hide)\r\n        }\r\n\r\n        //---------------------------CLUSTER FUNK---------------------------------\r\n        function cluster() {\r\n        \r\n            var nodes,\r\n                strength = 0.1;\r\n                // strength = 0.1;\r\n\r\n            function force (alpha) {\r\n\r\n                // scale + curve alpha value\r\n                alpha *= strength * alpha;\r\n\r\n                nodes.forEach(function(d) {\r\n                        var cluster = clusters[d.cluster];\r\n                    if (cluster === d) return;\r\n                \r\n                    let x = d.x - cluster.x,\r\n                        y = d.y - cluster.y,\r\n                        l = Math.sqrt(x * x + y * y),\r\n                        r = d.radius + cluster.radius;\r\n\r\n                if (l !== r) {\r\n                    l = (l - r) / l * alpha;\r\n                    d.x -= x *= l;\r\n                    d.y -= y *= l;\r\n                    cluster.x += x;\r\n                    cluster.y += y;\r\n                }\r\n                });\r\n\r\n            }\r\n\r\n            force.initialize = function (_) {\r\n                nodes = _;\r\n            }\r\n\r\n            force.strength = _ => {\r\n                strength = _ == null ? strength : _;\r\n                return force;\r\n            };\r\n\r\n            return force;\r\n        }\r\n\r\n\r\n        //------bottom of drawClusterChart()-----\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            // <div className=\"test\">\r\n            //     <NavBar />\r\n            //         <h2 id=\"cluster-chart-sb\" className=\"cluster-chart-header\">2019 DATA IN CLUSTERS</h2>\r\n            //         <div id=\"cluster-chart-sb\" className=\"cluster-chart\" ref=\"canvas\"></div>\r\n            // </div>\r\n\r\n            <Container fluid>\r\n                    {/* <NavBar /> */}\r\n                    <h2 id=\"cluster-chart-sb\" className=\"cluster-chart-header\">2019 DATA IN CLUSTERS</h2>\r\n                    <div id=\"cluster-chart-sb\" className=\"cluster-chart\" ref=\"canvas\"></div>\r\n            </Container>\r\n                        \r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default ClusterChart2018;","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport ClusterChart2018 from './ClusterChart2018';\r\nimport ClusterChart2019 from './ClusterChart2019';\r\n\r\nclass Compare extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <Container fluid>\r\n                <ClusterChart2018 />\r\n                <ClusterChart2019 />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compare;","import React from 'react';\r\nimport { Container } from 'reactstrap'\r\n\r\nclass Map extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <Container flex>\r\n                <h3>Interactive Map Coming Soon...</h3>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport d3Tip from 'd3-tip'; \r\nimport { Container } from 'reactstrap';\r\n// import data from '../data/totals.csv';\r\nimport data from '../data/all.csv';\r\n\r\n//-----CHECKLIST-----\r\n// [x] stacked bar chart\r\n// [x] select year\r\n// [] select ALL years\r\n// [x] sort\r\n// [] group <-> stack \r\n// [x] legend\r\n// [] tooltip !!!! RESEARCH USING TOOLTIP AND TRANSITION()\r\n// [] axis lines\r\n// [~] margins/style/etc\r\n\r\nclass StackedChartSB extends React.Component {\r\n\r\n    componentDidMount(){\r\n        d3.csv(data, d => {\r\n            return d;\r\n        }).then(data => this.drawStackedChart(data))\r\n    }\r\n\r\n    drawStackedChart(csv){\r\n        //---------------------------SPACE SETUP---------------------------------\r\n        // console.log(\"in drawStackedChart()\",data)\r\n        // const margin = { top: 20, right: 160, bottom: 35, left: 30 };\r\n        const margin = { top: 40, right: 40, bottom: 5, left: 40 };\r\n\r\n        const width = 1000 - margin.left - margin.right;\r\n        const height = 700 - margin.top - margin.bottom;\r\n\r\n        //---------------------------VARIABLES----------------------------------\r\n        // var colors = [\"#2F4F4F\", \"#b33040\", \"#d25c4d\", \"#f2b447\", \"#d9d574\"];\r\n        var colors = [\"#1E90FF\", \"#00BFFF\", \"#ADD8E6\", \"#DDA0DD\", \"#BA55D3\", \"#4B0082\"];\r\n\r\n        const keys = csv.columns.slice(2,8);\r\n        \r\n        const year = [...new Set(csv.map(d => d.year))]\r\n        const boroughs = [...new Set(csv.map(d => d.borough_name))]\r\n        \r\n        const options = d3.select(\"#year\").selectAll(\"option\")\r\n            .data(year)\r\n            .enter().append(\"option\")\r\n                .text(d => d);\r\n        \r\n        const formatComma = d3.format(\",\");\r\n\r\n        //---------------------------BUILD SVG---------------------------------\r\n        const svg = d3.select(this.refs.canvas).append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            // .style(\"border\", \"1px solid black\")\r\n\r\n        //---------------------------AXIS---------------------------------\r\n        const x = d3.scaleBand()\r\n            .range([margin.left, width - margin.right])\r\n            .padding(0.1);\r\n\r\n        const y = d3.scaleLinear()\r\n            .rangeRound([height - margin.bottom, margin.top]);\r\n        \r\n        const xAxis = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\r\n            .attr(\"class\",\"x-axis\");\r\n\r\n        const yAxis = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, 0)`)\r\n            .attr(\"class\", \"y-axis\");\r\n\r\n        const z = d3.scaleOrdinal()\r\n            .range(colors)\r\n            .domain(keys);\r\n\r\n        //------------------------TOOLTIP-------------------------------\r\n        const tip = d3Tip()\r\n        .attr(\"class\", \"d3-tip\")\r\n        .offset([-2, 0])\r\n        .direction(\"n\")\r\n        .html(function(d) {\r\n            // const mainHTML = \"<div id='thumbnail'><h3>\" + d.borough_name + \"</h3></div>\"\r\n            // +\"PERMIT TAP\" + \": <span style='color:orange'>\" + formatComma(d.permit_tap) + \"</span>\"\r\n            // +\"<p>SEWER PERMIT - INSTALL: \" + \"<span style='color:orangered'>\" + formatComma(d.sewer_permit_install)+\"</span> </p>\"\r\n            // +\"<p>SEWER PERMIT - PLUG: \" + \"<span style='color:orange'>\" + formatComma(d.sewer_permit_plug)+\"</span> </p>\"\r\n            // +\"<p>SEWER PERMIT - CATCH BASIN (MAN): \" + \"<span style='color:orange'>\" + formatComma(d.sewer_permit_ctch_basin_man)+\"</span> </p>\"\r\n            // +\"<p>SEWER PERMIT - CATCH BASIN: \" + \"<span style='color:orange'>\" + d.sewer_permit_ctch_basin+\"</span> </p>\"\r\n            // +\"<p>SEWER PERMIT - PRIVATE: \" + \"<span style='color:orange'>\" +d.sewer_permit_private+\"</span> </p>\"\r\n            // +\"<p>TOTAL PERMITS: \" + \"<span style='color:orangered'>\" +d.total+\"</span> </p>\";\r\n\r\n            const mainHTML = `<div id='thumbnail'><h3 style='color:steelblue'>${d.borough_name}</h3></div>` \r\n                + `<p>TOTAL PERMITS: <span style='color:orangered'>${formatComma(d.total)}</span></p>`\r\n            return mainHTML;\r\n        })\r\n\r\n        //------------------------UPDATE CHART-------------------------------\r\n        update(d3.select(\"#year\").property(\"value\"), 0)\r\n\r\n        function update(input, speed) {\r\n            const data = csv.filter(f => f.year === input)\r\n\r\n            data.forEach(function(d) {\r\n                d.total = d3.sum(keys, k => +d[k])\r\n                return d\r\n            })\r\n\r\n            y.domain([0, d3.max(data, d => d3.sum(keys, k => +d[k]))]).nice()\r\n\r\n            svg.selectAll(\".y-axis\")\r\n                .transition().duration(speed)\r\n                .call(d3.axisLeft(y).ticks(null, \"s\"));     // WHAT'S GOING ON HERE? ESPECIALLY IN `.ticks()`\r\n\r\n            data.sort(d3.select(\"#sort\").property(\"checked\")\r\n                    ? (a,b) => b.total - a.total\r\n                    : (a,b) => boroughs.indexOf(a.borough_name) - boroughs.indexOf(b.borough_name)\r\n                );\r\n            \r\n            x.domain(data.map( d => d.borough_name ));\r\n\r\n            svg.selectAll(\".x-axis\")\r\n                .transition().duration(speed)\r\n                .call(d3.axisBottom(x).tickSizeOuter(0));   // WHAT'S GOING ON HERE?\r\n\r\n            const group = svg.selectAll(\"g.layer\")\r\n                .data(d3.stack().keys(keys)(data), d => d.key );\r\n            \r\n            group.exit().remove();\r\n            \r\n            group.enter().append(\"g\")\r\n                .classed(\"layer\", true)                     // WHAT'S GOING ON HERE?\r\n                .attr(\"fill\", d => z(d.key));\r\n\r\n            const bars = svg.selectAll(\"g.layer\").selectAll(\"rect\")\r\n                .data( d => d, e => e.data.borough_name);\r\n\r\n            bars.exit().remove();\r\n\r\n            bars.enter().append(\"rect\")\r\n                .attr(\"width\", x.bandwidth())\r\n                .merge(bars)                                // WHAT'S GOING ON HERE?\r\n                .transition().duration(speed)\r\n                .attr(\"x\", d => x(d.data.borough_name ))\r\n                .attr(\"y\", d => y(d[1]))\r\n                .attr(\"height\", d => y(d[0]) - y(d[1]) )\r\n                // .on('mouseover', tip.show)\r\n                // .on('mouseout', tip.hide)\r\n            \r\n            const text = svg.selectAll(\".text\")\r\n                .data(data, d => d.borough_name )\r\n            \r\n            text.exit().remove();\r\n\r\n            text.enter().append(\"text\")\r\n                .attr(\"class\", \"text\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .merge(text)\r\n                .transition().duration(speed)\r\n                .attr(\"x\", d => x(d.borough_name) + x.bandwidth() / 2)\r\n                .attr(\"y\", d => y(d.total) - 5)\r\n                .text(d => formatComma(d.total));\r\n        //------bottom of update()-----\r\n        }\r\n\r\n        const select = d3.select(\"#year\")\r\n            .on(\"change\", () => update(select.property(\"value\"), 750 ));\r\n\r\n        const checkbox = d3.select(\"#sort\")\r\n            .on(\"click\", () => update(select.property(\"value\"), 750));\r\n\r\n\r\n        //------------------------LEGEND-------------------------------\r\n        const legend = svg.selectAll(\".legend\")\r\n            .data(colors)\r\n            .enter().append(\"g\")\r\n                .attr(\"class\", \"legend\")\r\n                .attr(\"transform\", (d,i) => `translate(-200, ${i * 19})`);\r\n\r\n        legend.append(\"rect\")\r\n            .attr(\"x\", width - 18)\r\n            .attr(\"width\", 18)\r\n            .attr(\"height\", 18)\r\n            .style(\"fill\", (d,i) => colors.slice().reverse()[i]);\r\n\r\n        legend.append(\"text\")\r\n            .attr(\"x\", width + 5)\r\n            .attr(\"y\", 9)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .style(\"text-anchor\", \"start\")\r\n            .text( (d,i) => {\r\n                // eslint-disable-next-line default-case\r\n                switch (i) {\r\n                    case 0: return \"PERMIT: TAP\";\r\n                    case 1: return \"SEWER PERMIT: INSTALL\";\r\n                    case 2: return \"SEWER PERMIT: PLUG\";\r\n                    case 3: return \"SEWER PERMIT: CATCH BASIN/MAN\"; \r\n                    case 4: return \"SEWER PERMIT: CATCH BASIN\"; \r\n                    case 5: return \"SEWER PERMIT: PRIVATE\"; \r\n                }\r\n            })          \r\n\r\n    //------bottom of drawBarChartTest()------\r\n    }\r\n\r\n    render(){\r\n        \r\n\r\n\r\n        return(\r\n            <Container fluid>\r\n                <h1>STACKED CHART DEMO</h1>\r\n                <div id=\"stacked-chart-sb\" className=\"stacked-chart\" ref=\"canvas\"></div>\r\n                Select year: \r\n                <select id=\"year\"></select>\r\n                <input type=\"checkbox\" id=\"sort\"></input>\r\n                Toggle sort\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StackedChartSB;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport About from './components/About';\nimport AllBarChart from './charts/AllBarChart';\n// import BarChart from './XBarChart';\nimport ClusterChart2018 from './charts/ClusterChart2018';\nimport ClusterChart2019 from './charts/ClusterChart2019';\nimport Compare from './charts/Compare';\nimport Map from './charts/Map';\n// import BarChartTest from './sandbox/BarChartTest';\nimport StackedChartSB from './sandbox/StackedChartSB';\n\n\nfunction App() {\n  return (\n    <div>\n    <div><p>welcome</p></div>\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route path='/' exact={true} component={Home} />\n        <Route path='/nyc-permits-viz' exact={true} component={Home} />\n        <Route path='/about' exact={true} component={About} />\n        {/* <Route path='/barchart' exact={true} component={BarChart} /> */}\n        <Route path='/2018' exact={true} component={ClusterChart2018} />\n        <Route path='/2019' exact={true} component={ClusterChart2019} />\n        <Route path='/comparison' exact={true} component={Compare} />\n        <Route path='/map' exact={true} component={Map} />\n        <Route path='/barchart-test' exact={true} component={AllBarChart} />\n        {/* <Route path='/clusterchart-test' exact={true} component={ClusterChart2018} /> */}\n        <Route path='/stackedchart-sb' exact={true} component={StackedChartSB} />\n      </Switch>\n    </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/New_York_City_Department_of_Environmental_Protection_logo.0958f267.png\";","module.exports = __webpack_public_path__ + \"static/media/NYCOpenData_Logo.228bdb80.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo-twitter.75604377.png\";","module.exports = __webpack_public_path__ + \"static/media/GitHub-Logo-03.957c4dd9.png\";","module.exports = __webpack_public_path__ + \"static/media/totals.80016fe3.csv\";","module.exports = __webpack_public_path__ + \"static/media/2018.86333227.csv\";","module.exports = __webpack_public_path__ + \"static/media/2019.7c2db490.csv\";","module.exports = __webpack_public_path__ + \"static/media/all.ae5cea69.csv\";"],"sourceRoot":""}