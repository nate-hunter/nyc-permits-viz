{"version":3,"sources":["components/NavBar.js","charts/StackedChartAll.js","charts/ClusterChart2018.js","charts/ClusterChart2019.js","charts/AllBarChart.js","components/Home.js","components/About.js","charts/Compare.js","charts/Map.js","sandbox/StackedChartSB.js","App.js","serviceWorker.js","index.js","data/all.csv","images/New_York_City_Department_of_Environmental_Protection_logo.png","images/NYCOpenData_Logo.png","images/Logo-twitter.png","images/GitHub-Logo-03.png","data/2018.csv","data/2019.csv","data/totals.csv"],"names":["NavBar","props","state","isOpen","toggle","bind","this","setState","Navbar","className","light","expand","NavbarBrand","tag","Link","to","NavbarToggler","onClick","Collapse","navbar","Nav","NavItem","NavLink","href","src","DEPLogo","alt","DataLogo","TwitterLogo","GithubLogo","React","Component","StackedChartAll","d3","data","d","then","drawStackedChart","csv","margin","width","height","colors","keys","columns","slice","year","Set","map","boroughs","borough_name","formatComma","selectAll","enter","append","text","svg","refs","canvas","attr","x","range","padding","y","rangeRound","z","domain","d3Tip","offset","direction","html","total","update","input","speed","filter","f","forEach","k","nice","transition","duration","call","ticks","sort","property","a","b","indexOf","tickSizeOuter","group","key","exit","remove","classed","bars","e","bandwidth","merge","select","on","legend","i","style","reverse","Container","fluid","id","ref","type","ClusterChart2018","drawClusterChart","graphWidth","graphHeight","mColors","mainCanvas","tip","permit_description","serv_order","permit_count","legendGroup","d3Legend","legendColor","shape","shapePadding","scale","scaleLegendGroup","scaleLegend","legendSize","labelOffset","orient","labels","labelWrap","shapeWidth","labelAlign","radiusScale","maxRadius","distinctBoroughScale","borough_code","length","clusters","Array","nodes","r","cluster","radius","Math","cos","PI","random","sin","node","force","strength","alpha","l","sqrt","initialize","_","velocityDecay","show","hide","delay","attrTween","t","AllBarChart","drawBarChartTest","item","paddingInner","paddingOuter","xAxis","yAxis","Home","displayedViz","handleClick","target","innerHTML","Button","outline","color","ClusterChart2019","About","flex","Compare","Map","StackedChartSB","App","path","exact","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.c5efb934.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Collapse, Nav, Navbar, NavbarBrand, NavbarToggler, NavItem, NavLink, Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport DEPLogo from '../images/New_York_City_Department_of_Environmental_Protection_logo.png';\r\n// import DEPLogo from '../images/nyc-ep01.png';\r\nimport DataLogo from '../images/NYCOpenData_Logo.png';\r\n// import DataLogo from '../images/NYCOpenData_Logo-02.png';\r\nimport TwitterLogo from '../images/Logo-twitter.png';\r\nimport GithubLogo from '../images/GitHub-Logo-03.png';\r\n\r\nclass NavBar extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = { isOpen: false };\r\n        this.toggle = this.toggle.bind(this);\r\n    }\r\n\r\n    toggle() {\r\n        this.setState({\r\n            isOpen: !this.state.isOpen\r\n        });\r\n    }\r\n \r\n    render(){\r\n        return(\r\n\r\n            <Navbar className=\"nav-color\" light expand=\"md\">\r\n                <NavbarBrand tag={Link} to=\"/\">Home</NavbarBrand>\r\n                <NavbarBrand tag={Link} to=\"/about\">About</NavbarBrand>\r\n                <NavbarToggler onClick={this.toggle} />\r\n                <Collapse isOpen={this.state.isOpen} navbar>\r\n                    <Nav className=\"ml-auto\" navbar>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-img\" href=\"https://www1.nyc.gov/site/dep/index.page\"><img src={DEPLogo} alt=\"DEP Logo\" /></NavLink>\r\n                            {/* <NavLink className=\"dep-img\" href=\"https://www1.nyc.gov/site/dep/index.page\"><img src=\"https://www1.nyc.gov/assets/dep/images/content/header/logo.svg\" alt=\"DEP Logo\" /></NavLink> */}\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-img\" href=\"https://opendata.cityofnewyork.us/\"><img src={DataLogo} alt=\"Open Data Logo\" /></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-img\" href=\"https://twitter.com/_nate_hunter_\"><img src={TwitterLogo} alt=\"Twitter Logo\" /></NavLink>\r\n                        </NavItem>\r\n                        <NavItem>\r\n                            <NavLink className=\"nav-img\" href=\"https://github.com/nate-hunter/nyc-permits-viz\"><img src={GithubLogo} alt=\"Github Logo\" /></NavLink>\r\n                        </NavItem>\r\n                    </Nav>\r\n                </Collapse>\r\n            </Navbar>\r\n\r\n        );\r\n    };\r\n};\r\n\r\nexport default NavBar;","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport d3Tip from 'd3-tip'; \r\nimport { Container } from 'reactstrap';\r\nimport data from '../data/all.csv';\r\n\r\n//-----CHECKLIST-----\r\n// [x] stacked bar chart\r\n// [x] select year\r\n// [] select ALL years\r\n// [x] sort\r\n// [] group <-> stack \r\n// [x] legend\r\n// [] tooltip !!!! RESEARCH USING TOOLTIP AND TRANSITION()\r\n// [] axis lines\r\n// [~] margins/style/etc\r\n\r\nclass StackedChartAll extends React.Component {\r\n\r\n    componentDidMount(){\r\n        d3.csv(data, d => {\r\n            return d;\r\n        }).then(data => this.drawStackedChart(data))\r\n    }\r\n\r\n    drawStackedChart(csv){\r\n        //---------------------------SPACE SETUP---------------------------------\r\n        const margin = { top: 40, right: 40, bottom: 5, left: 40 };\r\n\r\n        const width = 1000 - margin.left - margin.right;\r\n        const height = 700 - margin.top - margin.bottom;\r\n\r\n        //---------------------------VARIABLES----------------------------------\r\n        const colors = [\"#1E90FF\", \"#00BFFF\", \"#ADD8E6\", \"#DDA0DD\", \"#BA55D3\", \"#4B0082\"];\r\n\r\n        const keys = csv.columns.slice(2,8);\r\n        \r\n        const year = [...new Set(csv.map(d => d.year))]\r\n        const boroughs = [...new Set(csv.map(d => d.borough_name))]\r\n        \r\n        const options = d3.select(\"#year\").selectAll(\"option\")\r\n            .data(year)\r\n            .enter().append(\"option\")\r\n                .text(d => d);\r\n        \r\n        const formatComma = d3.format(\",\");\r\n\r\n        //---------------------------BUILD SVG---------------------------------\r\n        const svg = d3.select(this.refs.canvas).append(\"svg\")\r\n            .attr(\"viewBox\", `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`)\r\n            // .attr(\"width\", width + margin.left + margin.right)\r\n            // .attr(\"height\", height + margin.top + margin.bottom)\r\n            // .style(\"border\", \"1px solid black\")\r\n\r\n        //---------------------------AXIS---------------------------------\r\n        const x = d3.scaleBand()\r\n            .range([margin.left, width - margin.right])\r\n            .padding(0.1);\r\n\r\n        const y = d3.scaleLinear()\r\n            .rangeRound([height - margin.bottom, margin.top]);\r\n        \r\n        const xAxis = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\r\n            .attr(\"class\",\"x-axis\");\r\n\r\n        const yAxis = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, 0)`)\r\n            .attr(\"class\", \"y-axis\");\r\n\r\n        const z = d3.scaleOrdinal()\r\n            .range(colors)\r\n            .domain(keys);\r\n\r\n        //------------------------TOOLTIP-------------------------------\r\n        const tip = d3Tip()\r\n        .attr(\"class\", \"d3-tip\")\r\n        .offset([-2, 0])\r\n        .direction(\"n\")\r\n        .html(function(d) {\r\n            const mainHTML = `<div id='thumbnail'><h3 style='color:steelblue'>${d.borough_name}</h3></div>` \r\n                + `<p>TOTAL PERMITS: <span style='color:orangered'>${formatComma(d.total)}</span></p>`\r\n            return mainHTML;\r\n        })\r\n\r\n        //------------------------UPDATE CHART-------------------------------\r\n        update(d3.select(\"#year\").property(\"value\"), 0)\r\n\r\n        function update(input, speed) {\r\n            const data = csv.filter(f => f.year === input)\r\n\r\n            data.forEach(function(d) {\r\n                d.total = d3.sum(keys, k => +d[k])\r\n                return d\r\n            })\r\n\r\n            y.domain([0, d3.max(data, d => d3.sum(keys, k => +d[k]))]).nice()\r\n\r\n            svg.selectAll(\".y-axis\")\r\n                .transition().duration(speed)\r\n                .call(d3.axisLeft(y).ticks(null, \"s\"));     // WHAT'S GOING ON HERE? ESPECIALLY IN `.ticks()`\r\n\r\n            data.sort(d3.select(\"#sort\").property(\"checked\")\r\n                    ? (a,b) => b.total - a.total\r\n                    : (a,b) => boroughs.indexOf(a.borough_name) - boroughs.indexOf(b.borough_name)\r\n                );\r\n            \r\n            x.domain(data.map( d => d.borough_name ));\r\n\r\n            svg.selectAll(\".x-axis\")\r\n                .transition().duration(speed)\r\n                .call(d3.axisBottom(x).tickSizeOuter(0));   // WHAT'S GOING ON HERE?\r\n\r\n            const group = svg.selectAll(\"g.layer\")\r\n                .data(d3.stack().keys(keys)(data), d => d.key );\r\n            \r\n            group.exit().remove();\r\n            \r\n            group.enter().append(\"g\")\r\n                .classed(\"layer\", true)                     // WHAT'S GOING ON HERE?\r\n                .attr(\"fill\", d => z(d.key));\r\n\r\n            const bars = svg.selectAll(\"g.layer\").selectAll(\"rect\")\r\n                .data( d => d, e => e.data.borough_name);\r\n\r\n            bars.exit().remove();\r\n\r\n            bars.enter().append(\"rect\")\r\n                .attr(\"width\", x.bandwidth())\r\n                .merge(bars)                                // WHAT'S GOING ON HERE?\r\n                .transition().duration(speed)\r\n                .attr(\"x\", d => x(d.data.borough_name ))\r\n                .attr(\"y\", d => y(d[1]))\r\n                .attr(\"height\", d => y(d[0]) - y(d[1]) )\r\n                // .on('mouseover', tip.show)\r\n                // .on('mouseout', tip.hide)\r\n            \r\n            const text = svg.selectAll(\".text\")\r\n                .data(data, d => d.borough_name )\r\n            \r\n            text.exit().remove();\r\n\r\n            text.enter().append(\"text\")\r\n                .attr(\"class\", \"text\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .merge(text)\r\n                .transition().duration(speed)\r\n                .attr(\"x\", d => x(d.borough_name) + x.bandwidth() / 2)\r\n                .attr(\"y\", d => y(d.total) - 5)\r\n                .text(d => formatComma(d.total));\r\n        //------bottom of update()-----\r\n        }\r\n\r\n        const select = d3.select(\"#year\")\r\n            .on(\"change\", () => update(select.property(\"value\"), 750 ));\r\n\r\n        const checkbox = d3.select(\"#sort\")\r\n            .on(\"click\", () => update(select.property(\"value\"), 750));\r\n\r\n\r\n        //------------------------LEGEND-------------------------------\r\n        const legend = svg.selectAll(\".legend\")\r\n            .data(colors)\r\n            .enter().append(\"g\")\r\n                .attr(\"class\", \"legend\")\r\n                .attr(\"transform\", (d,i) => `translate(-200, ${i * 19})`);\r\n\r\n        legend.append(\"rect\")\r\n            .attr(\"x\", width - 18)\r\n            .attr(\"width\", 18)\r\n            .attr(\"height\", 18)\r\n            .style(\"fill\", (d,i) => colors.slice().reverse()[i]);\r\n\r\n        legend.append(\"text\")\r\n            .attr(\"x\", width + 5)\r\n            .attr(\"y\", 9)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .style(\"text-anchor\", \"start\")\r\n            .text( (d,i) => {\r\n                // eslint-disable-next-line default-case\r\n                switch (i) {\r\n                    case 0: return \"PERMIT: TAP\";\r\n                    case 1: return \"SEWER PERMIT: INSTALL\";\r\n                    case 2: return \"SEWER PERMIT: PLUG\";\r\n                    case 3: return \"SEWER PERMIT: CATCH BASIN/MAN\"; \r\n                    case 4: return \"SEWER PERMIT: CATCH BASIN\"; \r\n                    case 5: return \"SEWER PERMIT: PRIVATE\"; \r\n                }\r\n            })          \r\n\r\n    //------bottom of drawBarChartTest()------\r\n    }\r\n\r\n    render(){\r\n        \r\n\r\n\r\n        return(\r\n            <Container fluid className=\"stacked-chart-cont\">\r\n                <div id=\"stacked-chart-sb\" className=\"stacked-chart\" ref=\"canvas\"></div>\r\n                Select year: \r\n                <select id=\"year\"></select>\r\n                <input type=\"checkbox\" id=\"sort\"></input>\r\n                Sort By Totals\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StackedChartAll;","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport { Container } from 'reactstrap';\r\nimport data from '../data/2018.csv';\r\nimport d3Tip from 'd3-tip';\r\nimport d3Legend from 'd3-svg-legend';\r\n\r\nclass ClusterChart2018 extends React.Component {\r\n\r\n    componentDidMount(){\r\n        d3.csv(data, d => d)\r\n        .then(data => {\r\n            this.drawClusterChart(data)\r\n        })\r\n    }\r\n\r\n    drawClusterChart(data) {\r\n        const canvas = d3.select(this.refs.canvas);\r\n\r\n        const svg = canvas.append(\"svg\")\r\n            .attr(\"viewBox\", `0 0 1000 900`)\r\n            // .attr(\"viewBox\", `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`)\r\n            // .attr(\"width\", 1000)\r\n            // .attr(\"height\", 900)\r\n            // .style(\"border\", \"1px solid black\")\r\n\r\n        const padding = 1.5, \r\n            // clusterPadding = 16, \r\n            maxRadius = 15;\r\n        \r\n        const margin = { top: 20, right: 20, bottom: 70, left: 70 }\r\n        const graphWidth = 600 - margin.left - margin.right;\r\n        const graphHeight = 600 - margin.top - margin.bottom;\r\n        \r\n        // const colors = [\"#1E90FF\", \"#00BFFF\", \"#fc8d62\", \"#DDA0DD\", \"#BA55D3\", \"#4B0082\"];\r\n        // const mColors = d3.scaleOrdinal(colors);\r\n        const mColors = d3.scaleOrdinal(d3['schemeSet2']);\r\n\r\n        const mainCanvas = svg.append(\"g\")\r\n            .attr(\"width\", graphWidth / 2 )\r\n            .attr(\"height\", graphHeight / 2 )\r\n            .attr(\"transform\", `translate(${margin.left - 40}, ${margin.top + 160})`);\r\n        \r\n        const formatComma = d3.format(\",\");\r\n\r\n        //---------------------------TIP---------------------------------\r\n        const tip = d3Tip()\r\n            .attr(\"class\", \"d3-tip\")\r\n            .offset([-2, -3])\r\n            .direction(\"n\")\r\n            .html(d => {\r\n                const mainHtml = `<div id='thumbnail'><h3>${d.borough_name}</h3></div>`\r\n                    + `<p>Permit Description: <span style='color:orange'>${d.permit_description}</span></p>`\r\n                    + `<p>Service Order: <span style='color:orange'>${d.serv_order}</span></p>`\r\n                    + `<p>Total: <span style='color:orangered'>${formatComma(d.permit_count)}</span></p>`\r\n                    + `<p>Year: <span style='color:steelblue'>${d.year}</span></p>`\r\n               \r\n                return mainHtml;\r\n            })\r\n        \r\n        //---------------------------LEGEND---------------------------------\r\n        const legendGroup = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${graphWidth + 300}, 30)`);\r\n\r\n        const legend = d3Legend.legendColor()\r\n            .shape(\"circle\")\r\n            .shapePadding(4)\r\n            // .title(\"THIS IS THE LEGEND\")\r\n            .scale(mColors);\r\n\r\n        const scaleLegendGroup = svg.append(\"g\")\r\n            .attr(\"class\", \"scale-legend\")\r\n            .attr(\"transform\", `translate(${graphWidth / 2 - 150}, 30)`);\r\n\r\n        const scaleLegend = d3.scaleLinear();\r\n\r\n        const legendSize = d3Legend.legendSize()\r\n            .scale(scaleLegend)\r\n            .shape(\"circle\")\r\n            // .title(\"Size Legend\")\r\n            .shapePadding(12)\r\n            .labelOffset(20)\r\n            .orient(\"horizontal\")\r\n            .labels([\"Less Permits Granted\",\r\n                \"\", \"\", \"\", \"More Permits Granted\"])\r\n            .labelWrap(30)\r\n            .shapeWidth(40)\r\n            .labelAlign(\"start\"); \r\n\r\n        mainCanvas.call(tip);\r\n\r\n        //---------------------------USE DATA---------------------------------\r\n        const radiusScale = d3.scaleLinear()\r\n            .domain(d3.extent(data, d => +d.permit_count ))\r\n            .range([10, maxRadius + 80])\r\n\r\n        const numberOfBoroughsScale = d3.scaleOrdinal()\r\n            .domain(data.map( d => d.borough_code ))\r\n\r\n        const distinctBoroughScale = numberOfBoroughsScale.domain().length;\r\n\r\n        const clusters = new Array(distinctBoroughScale);\r\n\r\n        const legendColorsArray = [\"#66c2a5\", \"#fc8d62\", \"#8da0cb\", \"#e78ac3\", \"#a6d854\"];\r\n\r\n        scaleLegend.domain(d3.extent(data, d => +d.permit_count ))\r\n            .range([10, maxRadius])\r\n\r\n        mColors.domain(data.map( d => d.borough_name ))\r\n            .range(legendColorsArray);\r\n\r\n        legendGroup.call(legend);\r\n\r\n        legendGroup.selectAll(\"text\")\r\n            .attr(\"fill\", \"darkblue\")\r\n\r\n        scaleLegendGroup.call(legendSize);\r\n\r\n        scaleLegendGroup.selectAll(\"text\")\r\n            .attr(\"fill\", \"darkblue\")\r\n            \r\n        scaleLegendGroup.select(\"g\")\r\n            .attr(\"fill\", \"#00BFFF\")\r\n\r\n        //---------------------------BUILD NODES---------------------------------\r\n        const nodes = d3.range(data.length)\r\n            .map( d => {\r\n                let i = +data[d].borough_code;\r\n                let r = radiusScale(data[d].permit_count);\r\n\r\n                d = {\r\n                    cluster: i,\r\n                    radius: r,\r\n                    borough_name: data[d].borough_name,\r\n                    permit_description: data[d].permit_description,\r\n                    serv_order: data[d].serv_order,\r\n                    permit_count: data[d].permit_count,\r\n                    year: data[d].year,\r\n                    x: Math.cos(d / data.length * 2 * Math.PI) * 200 + graphWidth / 2 + Math.random(),\r\n                    y: Math.sin(d / data.length * 2 * Math.PI) * 200 + graphHeight / 2 + Math.random()\r\n                }\r\n\r\n                if ( !clusters[i] || (r > clusters[i].radius) ) clusters[i] = d;    // NOT 100% SURE WHAT'S GOING ON HERE \r\n\r\n                return d;\r\n            })\r\n\r\n        //---------------------------USING THE FORCE---------------------------------\r\n        const force = d3.forceSimulation()\r\n            .force(\"center\", d3.forceCenter(graphWidth, graphHeight / 2))\r\n\r\n            .force(\"cluster\", cluster()\r\n                .strength(.6))\r\n            \r\n            .force(\"collide\", d3.forceCollide( d => d.radius + padding )\r\n                .strength(0.9))\r\n                .velocityDecay(0.7)\r\n\r\n            .on(\"tick\", layoutTick)\r\n                .nodes(nodes);\r\n\r\n        //---------------------------BUILD NODE---------------------------------\r\n        const node = mainCanvas.selectAll(\"circle\")\r\n            .data(nodes).enter()\r\n                .append(\"circle\")\r\n                .style(\"fill\", d => mColors(d.cluster / distinctBoroughScale) )\r\n\r\n        node.transition()\r\n            .duration(1000)\r\n            .delay( (d,i) => i * 5 )\r\n            .attrTween(\"r\", d => {\r\n                let i = d3.interpolate(0, d.radius);\r\n                return t => d.radius = i(t);\r\n            })\r\n\r\n        //---------------------------LAYOUT-TICK FUNK---------------------------------\r\n        function layoutTick(e) {\r\n            node.attr(\"cx\", d => d.x )\r\n                .attr(\"cy\", d => d.y )\r\n                .attr(\"r\", d => d.radius )\r\n                .on(\"mouseover\", tip.show)\r\n                .on(\"mouseout\", tip.hide)\r\n        }\r\n\r\n        //---------------------------CLUSTER FUNK---------------------------------\r\n        function cluster() {\r\n        \r\n            var nodes,\r\n                strength = 0.1;\r\n\r\n            function force (alpha) {\r\n\r\n                // scale + curve alpha value\r\n                alpha *= strength * alpha;\r\n\r\n                nodes.forEach(function(d) {\r\n                        var cluster = clusters[d.cluster];\r\n                    if (cluster === d) return;\r\n                \r\n                    let x = d.x - cluster.x,\r\n                        y = d.y - cluster.y,\r\n                        l = Math.sqrt(x * x + y * y),\r\n                        r = d.radius + cluster.radius;\r\n\r\n                if (l !== r) {\r\n                    l = (l - r) / l * alpha;\r\n                    d.x -= x *= l;\r\n                    d.y -= y *= l;\r\n                    cluster.x += x;\r\n                    cluster.y += y;\r\n                }\r\n                });\r\n\r\n            }\r\n\r\n            force.initialize = function (_) {\r\n                nodes = _;\r\n            }\r\n\r\n            force.strength = _ => {\r\n                strength = _ == null ? strength : _;\r\n                return force;\r\n            };\r\n\r\n            return force;\r\n        }\r\n        //------bottom of drawClusterChart()-----\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container fluid>\r\n                    {/* <h2 id=\"cluster-chart-sb\" className=\"cluster-chart-header\">2018 DATA IN CLUSTERS</h2> */}\r\n                    <div id=\"cluster-chart-sb\" className=\"cluster-chart\" ref=\"canvas\"></div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ClusterChart2018;","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport { Container } from 'reactstrap';\r\nimport data from '../data/2019.csv';\r\nimport d3Tip from 'd3-tip';\r\nimport d3Legend from 'd3-svg-legend';\r\n\r\nclass ClusterChart2018 extends React.Component {\r\n\r\n    componentDidMount(){\r\n        d3.csv(data, d => d)\r\n        .then(data => {\r\n            this.drawClusterChart(data)\r\n        })\r\n    }\r\n\r\n    drawClusterChart(data) {\r\n        const canvas = d3.select(this.refs.canvas);\r\n\r\n        const svg = canvas.append(\"svg\")\r\n            .attr(\"viewBox\", `0 0 1000 900`)\r\n            // .attr(\"width\", 1000)\r\n            // .attr(\"height\", 900)\r\n            // .style(\"border\", \"1px solid black\")\r\n\r\n        const padding = 1.5, \r\n            // clusterPadding = 16, \r\n            maxRadius = 15;\r\n        \r\n        const margin = { top: 20, right: 20, bottom: 70, left: 70 }\r\n        const graphWidth = 600 - margin.left - margin.right;\r\n        const graphHeight = 600 - margin.top - margin.bottom;\r\n        \r\n        // const colors = [\"#1E90FF\", \"#00BFFF\", \"#fc8d62\", \"#DDA0DD\", \"#BA55D3\", \"#4B0082\"];\r\n\r\n        // const mColors = d3.scaleOrdinal(colors);\r\n        const mColors = d3.scaleOrdinal(d3['schemeSet2']);\r\n\r\n        const mainCanvas = svg.append(\"g\")\r\n            .attr(\"width\", graphWidth / 2 )\r\n            .attr(\"height\", graphHeight / 2 )\r\n            .attr(\"transform\", `translate(${margin.left - 40}, ${margin.top + 160})`);\r\n        \r\n        const formatComma = d3.format(\",\");\r\n\r\n        //---------------------------TIP---------------------------------\r\n        const tip = d3Tip()\r\n            .attr(\"class\", \"d3-tip\")\r\n            .offset([-2, -3])\r\n            .direction(\"n\")\r\n            .html(d => {\r\n                const mainHtml = `<div id='thumbnail'><h3>${d.borough_name}</h3></div>`\r\n                    + `<p>Permit Description: <span style='color:orange'>${d.permit_description}</span></p>`\r\n                    + `<p>Service Order: <span style='color:orange'>${d.serv_order}</span></p>`\r\n                    + `<p>Total: <span style='color:orangered'>${formatComma(d.permit_count)}</span></p>`\r\n                    + `<p>Year: <span style='color:steelblue'>${d.year}</span></p>`\r\n               \r\n                return mainHtml;\r\n            })\r\n        \r\n        //---------------------------LEGEND---------------------------------\r\n        const legendGroup = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${graphWidth + 300}, 30)`);\r\n\r\n        const legend = d3Legend.legendColor()\r\n            .shape(\"circle\")\r\n            .shapePadding(4)\r\n            // .title(\"THIS IS THE LEGEND\")\r\n            .scale(mColors);\r\n\r\n        const scaleLegendGroup = svg.append(\"g\")\r\n            .attr(\"class\", \"scale-legend\")\r\n            .attr(\"transform\", `translate(${graphWidth / 2 - 150}, 30)`);\r\n\r\n        const scaleLegend = d3.scaleLinear();\r\n\r\n        const legendSize = d3Legend.legendSize()\r\n            .scale(scaleLegend)\r\n            .shape(\"circle\")\r\n            // .title(\"Size Legend\")\r\n            .shapePadding(12)\r\n            .labelOffset(20)\r\n            .orient(\"horizontal\")\r\n            .labels([\"Less Permits Granted\",\r\n                \"\", \"\", \"\", \"More Permits Granted\"])\r\n            .labelWrap(30)\r\n            .shapeWidth(40)\r\n            .labelAlign(\"start\"); \r\n\r\n        mainCanvas.call(tip);\r\n\r\n        //---------------------------USE DATA---------------------------------\r\n        const radiusScale = d3.scaleLinear()\r\n            .domain(d3.extent(data, d => +d.permit_count ))\r\n            .range([10, maxRadius + 80])\r\n\r\n        const numberOfBoroughsScale = d3.scaleOrdinal()\r\n            .domain(data.map( d => d.borough_code ))\r\n\r\n        const distinctBoroughScale = numberOfBoroughsScale.domain().length;\r\n\r\n        const clusters = new Array(distinctBoroughScale);\r\n\r\n        //---------------------------LEGEND---------------------------------\r\n        const legendColorsArray = [\"#66c2a5\", \"#fc8d62\", \"#8da0cb\", \"#e78ac3\", \"#a6d854\"];\r\n \r\n        scaleLegend.domain(d3.extent(data, d => +d.permit_count ))\r\n            .range([10, maxRadius])\r\n\r\n        mColors.domain(data.map( d => d.borough_name ))\r\n            .range(legendColorsArray);\r\n\r\n        legendGroup.call(legend);\r\n\r\n        legendGroup.selectAll(\"text\")\r\n            .attr(\"fill\", \"darkblue\")\r\n\r\n        scaleLegendGroup.call(legendSize);\r\n\r\n        scaleLegendGroup.selectAll(\"text\")\r\n            .attr(\"fill\", \"darkblue\")\r\n            \r\n        scaleLegendGroup.select(\"g\")\r\n            .attr(\"fill\", \"#00BFFF\")\r\n           \r\n        //---------------------------BUILD NODES---------------------------------\r\n        const nodes = d3.range(data.length)\r\n            .map( d => {\r\n                let i = +data[d].borough_code;\r\n                let r = radiusScale(data[d].permit_count);\r\n\r\n                d = {\r\n                    cluster: i,\r\n                    radius: r,\r\n                    borough_name: data[d].borough_name,\r\n                    permit_description: data[d].permit_description,\r\n                    serv_order: data[d].serv_order,\r\n                    permit_count: data[d].permit_count,\r\n                    year: data[d].year,\r\n                    x: Math.cos(d / data.length * 2 * Math.PI) * 200 + graphWidth / 2 + Math.random(),\r\n                    y: Math.sin(d / data.length * 2 * Math.PI) * 200 + graphHeight / 2 + Math.random()\r\n                }\r\n\r\n                if ( !clusters[i] || (r > clusters[i].radius) ) clusters[i] = d;    // NOT 100% SURE WHAT'S GOING ON HERE \r\n\r\n                return d;\r\n            })\r\n\r\n        //---------------------------USING THE FORCE---------------------------------\r\n        const force = d3.forceSimulation()\r\n            .force(\"center\", d3.forceCenter(graphWidth, graphHeight / 2))\r\n\r\n            .force(\"cluster\", cluster()\r\n                .strength(.6))\r\n            \r\n            .force(\"collide\", d3.forceCollide( d => d.radius + padding )\r\n                .strength(0.9))\r\n                .velocityDecay(0.7)\r\n\r\n            .on(\"tick\", layoutTick)\r\n                .nodes(nodes);\r\n\r\n        //---------------------------BUILD NODE---------------------------------\r\n        const node = mainCanvas.selectAll(\"circle\")\r\n            .data(nodes).enter()\r\n                .append(\"circle\")\r\n                .style(\"fill\", d => mColors(d.cluster / distinctBoroughScale) )\r\n\r\n        node.transition()\r\n            .duration(1000)\r\n            .delay( (d,i) => i * 5 )\r\n            .attrTween(\"r\", d => {\r\n                let i = d3.interpolate(0, d.radius);\r\n                return t => d.radius = i(t);\r\n            })\r\n\r\n        //---------------------------LAYOUT-TICK FUNK---------------------------------\r\n        function layoutTick(e) {\r\n            node.attr(\"cx\", d => d.x )\r\n                .attr(\"cy\", d => d.y )\r\n                .attr(\"r\", d => d.radius )\r\n                .on(\"mouseover\", tip.show)\r\n                .on(\"mouseout\", tip.hide)\r\n        }\r\n\r\n        //---------------------------CLUSTER FUNK---------------------------------\r\n        function cluster() {\r\n        \r\n            var nodes,\r\n                strength = 0.1;\r\n\r\n            function force (alpha) {\r\n\r\n                // scale + curve alpha value\r\n                alpha *= strength * alpha;\r\n\r\n                nodes.forEach(function(d) {\r\n                        var cluster = clusters[d.cluster];\r\n                    if (cluster === d) return;\r\n                \r\n                    let x = d.x - cluster.x,\r\n                        y = d.y - cluster.y,\r\n                        l = Math.sqrt(x * x + y * y),\r\n                        r = d.radius + cluster.radius;\r\n\r\n                if (l !== r) {\r\n                    l = (l - r) / l * alpha;\r\n                    d.x -= x *= l;\r\n                    d.y -= y *= l;\r\n                    cluster.x += x;\r\n                    cluster.y += y;\r\n                }\r\n                });\r\n\r\n            }\r\n\r\n            force.initialize = function (_) {\r\n                nodes = _;\r\n            }\r\n\r\n            force.strength = _ => {\r\n                strength = _ == null ? strength : _;\r\n                return force;\r\n            };\r\n\r\n            return force;\r\n        }\r\n        //------bottom of drawClusterChart()-----\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container fluid>\r\n                    {/* <h2 id=\"cluster-chart-sb\" className=\"cluster-chart-header\">2019 DATA IN CLUSTERS</h2> */}\r\n                    <div id=\"cluster-chart-sb\" className=\"cluster-chart\" ref=\"canvas\"></div>\r\n            </Container>\r\n                        \r\n                \r\n        );\r\n    }\r\n}\r\n\r\nexport default ClusterChart2018;","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport { Container } from 'reactstrap';\r\n// import NavBar from '../components/NavBar';\r\n// import data from './data/all.csv';\r\nimport data from '../data/totals.csv';\r\nimport d3Tip from 'd3-tip';\r\n\r\nclass AllBarChart extends React.Component {\r\n\r\n    componentDidMount(){\r\n        d3.csv(data, function(d) {\r\n            return d;\r\n        })\r\n        .then(data => {\r\n            this.drawBarChartTest(data)\r\n        })\r\n    }\r\n\r\n    drawBarChartTest(data){\r\n        const margin = { top: 40, right: 20, bottom: 30, left: 40 },\r\n            width = 960 - margin.left - margin.right,\r\n            height = 500 - margin.top - margin.bottom;\r\n\r\n        //---------------------------AXIS---------------------------------\r\n        const x = d3.scaleBand()\r\n            .domain(data.map(item => item.borough_name))\r\n            .range([0, width])\r\n            .paddingInner(0.2)\r\n            .paddingOuter(0.2);\r\n\r\n        const y = d3.scaleLinear()\r\n            .domain( [0, d3.max(data, d => d.total)] )\r\n            .range([height, 0]);\r\n\r\n        const xAxis = d3.axisBottom(x);\r\n        const yAxis = d3.axisLeft(y);\r\n        \r\n        //---------------------------TIP---------------------------------\r\n        const formatComma = d3.format(\",\");\r\n\r\n        const tip = d3Tip()\r\n            .attr(\"class\", \"d3-tip\")\r\n            .offset([-2, 0])\r\n            .direction(\"n\")\r\n            .html(function(d) {\r\n                const mainHTML = `<div id='thumbnail'><h3 style='color:steelblue'>${d.borough_name}</h3></div>` \r\n                    + `<p>TOTAL PERMITS: <span style='color:orangered'>${formatComma(d.total)}</span></p>`\r\n                return mainHTML;\r\n            })\r\n\r\n        //---------------------------BUILD SVG---------------------------------\r\n        const svg = d3.select(this.refs.canvas).append(\"svg\")\r\n            .attr(\"viewBox\", `0 0 ${width + margin.left + margin.right} ${height + margin.top + margin.bottom}`)\r\n            // .attr(\"width\", width + margin.left + margin.right)\r\n            // .attr(\"height\", height + margin.top + margin.bottom)\r\n            // .style(\"border\", \"1px solid black\")\r\n            .append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, ${margin.top})`);\r\n\r\n        svg.call(tip);\r\n\r\n        //---------------------------BUILD AXIS---------------------------------\r\n        svg.append(\"g\")\r\n            .attr(\"class\", \"x axis\")\r\n            .attr(\"transform\", `translate(0, ${height})`)\r\n            .call(xAxis);\r\n        \r\n        svg.append(\"g\")\r\n            .attr(\"class\", \"y axis\")\r\n            .call(yAxis)\r\n            .append(\"text\")\r\n            .attr(\"transform\", \"rotate(-90)\")\r\n            .attr(\"y\", 6)\r\n            .attr(\"dy\", \".71em\")\r\n            .style(\"text-anchor\", \"end\")\r\n            .text(\"Permits\");\r\n\r\n            \r\n        //---------------------------USE DATA---------------------------------\r\n        svg.selectAll(\".bar\")\r\n            .data(data)\r\n            .enter().append(\"rect\")\r\n                .attr(\"class\", \"bar\")\r\n                .attr(\"x\", (d) => x(d.borough_name) )\r\n                .attr(\"width\", x.bandwidth)\r\n                .attr(\"y\", d => y(d.total) )\r\n                .attr(\"height\", d => height - y(d.total) )\r\n                .on('mouseover', tip.show)\r\n                .on('mouseout', tip.hide)\r\n        //------bottom of drawBarChartTest()-----\r\n    }\r\n\r\n    render(){\r\n\r\n        return(\r\n            <Container fluid>\r\n                {/* <h2 id=\"bar-chart-sb\" className=\"bar-chart-header\">WATER AND SEWER PERMITS GRANTED (ALL YEARS)</h2> */}\r\n                <div id=\"bar-chart-sb\" className=\"bar-chart\" ref=\"canvas\"></div>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AllBarChart;","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { Button, Container } from 'reactstrap';\r\nimport StackedChartAll from '../charts/StackedChartAll'\r\nimport ClusterChart2018 from '../charts/ClusterChart2018'\r\nimport ClusterChart2019 from '../charts/ClusterChart2019'\r\nimport AllBarChart from '../charts/AllBarChart'\r\n\r\nclass Home extends React.Component {\r\n\r\n    state = {\r\n        displayedViz: \"COMPARE YEARS\"\r\n    }\r\n\r\n    handleClick = (e) => {\r\n        this.setState({\r\n            displayedViz: e.target.innerHTML\r\n        })\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <Container fluid className=\"home-cont\">\r\n                <Button onClick={this.handleClick} outline color=\"primary\">2018</Button>{' '}\r\n                <Button outline color=\"primary\" onClick={this.handleClick}>2019</Button>{' '}\r\n                <Button outline color=\"primary\" onClick={this.handleClick}>COMPARE YEARS</Button>{' '}\r\n                <Button outline color=\"primary\" onClick={this.handleClick}>ALL PERMITS (BAR)</Button>{' '}\r\n                <Button outline color=\"primary\" ><Link to=\"/map\">MAP</Link></Button>{' '}\r\n                \r\n                {this.state.displayedViz===\"2018\" ? <ClusterChart2018 /> : null}\r\n                {this.state.displayedViz===\"2019\" ? <ClusterChart2019 /> : null}\r\n                {this.state.displayedViz===\"COMPARE YEARS\" ? <StackedChartAll /> : null}\r\n                {this.state.displayedViz===\"ALL PERMITS (BAR)\" ? <AllBarChart /> : null}\r\n            </Container>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Home;\r\n\r\n/*\r\nclass Home extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <Container fluid className=\"home-cont\">\r\n                <Button outline color=\"primary\"><Link to=\"/2018\">2018</Link></Button>{' '}\r\n                <Button outline color=\"primary\"><Link to=\"/2019\">2019</Link></Button>{' '}\r\n                <Button outline color=\"primary\"><Link to=\"/comparison\">COMPARE YEARS</Link></Button>{' '}\r\n                <Button outline color=\"primary\"><Link to=\"/barchart-test\">ALL PERMITS (BAR)</Link></Button>{' '}\r\n                <Button outline color=\"primary\"><Link to=\"/map\">MAP</Link></Button>{' '}\r\n                <StackedChartAll />\r\n            </Container>\r\n        );\r\n    };\r\n};\r\n\r\nexport default Home;\r\n*/","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\n\r\nconst About = () => {\r\n    return(\r\n        <Container flex className=\"about-cont\">\r\n            <h4>WHY THIS DATA:</h4>\r\n            <p>This project combines my previous experience as an environmental consultant with my goal of mastering D3.js</p>\r\n            <br/>\r\n            <h4>ABOUT THIS DATA:</h4>\r\n            <h5>Sewer Certification & Connection Permits</h5>\r\n            <p>Any time a project requires connecting to a City sewer, DEP must approve that the sewer can accept the storm and/or santinary discharge. A sewer certification is required for any new connection to a City sewer, a private sewer, a private drain, a septic system, or an approved outlet. Sewer certification may also be required for an alteration or renovation that increases the sanitary and/or storm flow generated on the site. </p>\r\n            <br/>\r\n            <p>Data Obtained Using <a href=\"https://data.cityofnewyork.us/Environment/Water-and-Sewer-Permits/4k4u-823g\">NYC Open Data</a>.</p>\r\n            <p>Data Provided by <a href=\"https://www1.nyc.gov/site/dep/about/water-sewer-forms.page\">Department of Environmental Protection (DEP)</a>.</p>\r\n\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default About;","import React from 'react';\r\nimport { Container } from 'reactstrap';\r\nimport ClusterChart2018 from './ClusterChart2018';\r\nimport ClusterChart2019 from './ClusterChart2019';\r\n\r\nclass Compare extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <Container fluid>\r\n                <ClusterChart2018 />\r\n                <ClusterChart2019 />\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Compare;","import React from 'react';\r\nimport { Container } from 'reactstrap'\r\n\r\nclass Map extends React.Component {\r\n\r\n    render(){\r\n        return(\r\n            <Container fluid className=\"map-cont\">\r\n                <h3>[ Interactive Map In Development ]</h3>\r\n            </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Map;","import React from 'react';\r\nimport * as d3 from 'd3';\r\nimport d3Tip from 'd3-tip'; \r\nimport { Container } from 'reactstrap';\r\n// import data from '../data/totals.csv';\r\nimport data from '../data/all.csv';\r\n\r\n//-----CHECKLIST-----\r\n// [x] stacked bar chart\r\n// [x] select year\r\n// [] select ALL years\r\n// [x] sort\r\n// [] group <-> stack \r\n// [x] legend\r\n// [] tooltip !!!! RESEARCH USING TOOLTIP AND TRANSITION()\r\n// [] axis lines\r\n// [~] margins/style/etc\r\n\r\nclass StackedChartSB extends React.Component {\r\n\r\n    componentDidMount(){\r\n        d3.csv(data, d => {\r\n            return d;\r\n        }).then(data => this.drawStackedChart(data))\r\n    }\r\n\r\n    drawStackedChart(csv){\r\n        //---------------------------SPACE SETUP---------------------------------\r\n        // console.log(\"in drawStackedChart()\",data)\r\n        // const margin = { top: 20, right: 160, bottom: 35, left: 30 };\r\n        const margin = { top: 40, right: 40, bottom: 5, left: 40 };\r\n\r\n        const width = 1000 - margin.left - margin.right;\r\n        const height = 700 - margin.top - margin.bottom;\r\n\r\n        //---------------------------VARIABLES----------------------------------\r\n        // var colors = [\"#2F4F4F\", \"#b33040\", \"#d25c4d\", \"#f2b447\", \"#d9d574\"];\r\n        const colors = [\"#1E90FF\", \"#00BFFF\", \"#ADD8E6\", \"#DDA0DD\", \"#BA55D3\", \"#4B0082\"];\r\n\r\n        const keys = csv.columns.slice(2,8);\r\n        \r\n        const year = [...new Set(csv.map(d => d.year))]\r\n        const boroughs = [...new Set(csv.map(d => d.borough_name))]\r\n        \r\n        const options = d3.select(\"#year\").selectAll(\"option\")\r\n            .data(year)\r\n            .enter().append(\"option\")\r\n                .text(d => d);\r\n        \r\n        const formatComma = d3.format(\",\");\r\n\r\n        //---------------------------BUILD SVG---------------------------------\r\n        const svg = d3.select(this.refs.canvas).append(\"svg\")\r\n            .attr(\"width\", width + margin.left + margin.right)\r\n            .attr(\"height\", height + margin.top + margin.bottom)\r\n            // .style(\"border\", \"1px solid black\")\r\n\r\n        //---------------------------AXIS---------------------------------\r\n        const x = d3.scaleBand()\r\n            .range([margin.left, width - margin.right])\r\n            .padding(0.1);\r\n\r\n        const y = d3.scaleLinear()\r\n            .rangeRound([height - margin.bottom, margin.top]);\r\n        \r\n        const xAxis = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(0, ${height - margin.bottom})`)\r\n            .attr(\"class\",\"x-axis\");\r\n\r\n        const yAxis = svg.append(\"g\")\r\n            .attr(\"transform\", `translate(${margin.left}, 0)`)\r\n            .attr(\"class\", \"y-axis\");\r\n\r\n        const z = d3.scaleOrdinal()\r\n            .range(colors)\r\n            .domain(keys);\r\n\r\n        //------------------------TOOLTIP-------------------------------\r\n        const tip = d3Tip()\r\n        .attr(\"class\", \"d3-tip\")\r\n        .offset([-2, 0])\r\n        .direction(\"n\")\r\n        .html(function(d) {\r\n            // const mainHTML = \"<div id='thumbnail'><h3>\" + d.borough_name + \"</h3></div>\"\r\n            // +\"PERMIT TAP\" + \": <span style='color:orange'>\" + formatComma(d.permit_tap) + \"</span>\"\r\n            // +\"<p>SEWER PERMIT - INSTALL: \" + \"<span style='color:orangered'>\" + formatComma(d.sewer_permit_install)+\"</span> </p>\"\r\n            // +\"<p>SEWER PERMIT - PLUG: \" + \"<span style='color:orange'>\" + formatComma(d.sewer_permit_plug)+\"</span> </p>\"\r\n            // +\"<p>SEWER PERMIT - CATCH BASIN (MAN): \" + \"<span style='color:orange'>\" + formatComma(d.sewer_permit_ctch_basin_man)+\"</span> </p>\"\r\n            // +\"<p>SEWER PERMIT - CATCH BASIN: \" + \"<span style='color:orange'>\" + d.sewer_permit_ctch_basin+\"</span> </p>\"\r\n            // +\"<p>SEWER PERMIT - PRIVATE: \" + \"<span style='color:orange'>\" +d.sewer_permit_private+\"</span> </p>\"\r\n            // +\"<p>TOTAL PERMITS: \" + \"<span style='color:orangered'>\" +d.total+\"</span> </p>\";\r\n\r\n            const mainHTML = `<div id='thumbnail'><h3 style='color:steelblue'>${d.borough_name}</h3></div>` \r\n                + `<p>TOTAL PERMITS: <span style='color:orangered'>${formatComma(d.total)}</span></p>`\r\n            return mainHTML;\r\n        })\r\n\r\n        //------------------------UPDATE CHART-------------------------------\r\n        update(d3.select(\"#year\").property(\"value\"), 0)\r\n\r\n        function update(input, speed) {\r\n            const data = csv.filter(f => f.year === input)\r\n\r\n            data.forEach(function(d) {\r\n                d.total = d3.sum(keys, k => +d[k])\r\n                return d\r\n            })\r\n\r\n            y.domain([0, d3.max(data, d => d3.sum(keys, k => +d[k]))]).nice()\r\n\r\n            svg.selectAll(\".y-axis\")\r\n                .transition().duration(speed)\r\n                .call(d3.axisLeft(y).ticks(null, \"s\"));     // WHAT'S GOING ON HERE? ESPECIALLY IN `.ticks()`\r\n\r\n            data.sort(d3.select(\"#sort\").property(\"checked\")\r\n                    ? (a,b) => b.total - a.total\r\n                    : (a,b) => boroughs.indexOf(a.borough_name) - boroughs.indexOf(b.borough_name)\r\n                );\r\n            \r\n            x.domain(data.map( d => d.borough_name ));\r\n\r\n            svg.selectAll(\".x-axis\")\r\n                .transition().duration(speed)\r\n                .call(d3.axisBottom(x).tickSizeOuter(0));   // WHAT'S GOING ON HERE?\r\n\r\n            const group = svg.selectAll(\"g.layer\")\r\n                .data(d3.stack().keys(keys)(data), d => d.key );\r\n            \r\n            group.exit().remove();\r\n            \r\n            group.enter().append(\"g\")\r\n                .classed(\"layer\", true)                     // WHAT'S GOING ON HERE?\r\n                .attr(\"fill\", d => z(d.key));\r\n\r\n            const bars = svg.selectAll(\"g.layer\").selectAll(\"rect\")\r\n                .data( d => d, e => e.data.borough_name);\r\n\r\n            bars.exit().remove();\r\n\r\n            bars.enter().append(\"rect\")\r\n                .attr(\"width\", x.bandwidth())\r\n                .merge(bars)                                // WHAT'S GOING ON HERE?\r\n                .transition().duration(speed)\r\n                .attr(\"x\", d => x(d.data.borough_name ))\r\n                .attr(\"y\", d => y(d[1]))\r\n                .attr(\"height\", d => y(d[0]) - y(d[1]) )\r\n                // .on('mouseover', tip.show)\r\n                // .on('mouseout', tip.hide)\r\n            \r\n            const text = svg.selectAll(\".text\")\r\n                .data(data, d => d.borough_name )\r\n            \r\n            text.exit().remove();\r\n\r\n            text.enter().append(\"text\")\r\n                .attr(\"class\", \"text\")\r\n                .attr(\"text-anchor\", \"middle\")\r\n                .merge(text)\r\n                .transition().duration(speed)\r\n                .attr(\"x\", d => x(d.borough_name) + x.bandwidth() / 2)\r\n                .attr(\"y\", d => y(d.total) - 5)\r\n                .text(d => formatComma(d.total));\r\n        //------bottom of update()-----\r\n        }\r\n\r\n        const select = d3.select(\"#year\")\r\n            .on(\"change\", () => update(select.property(\"value\"), 750 ));\r\n\r\n        const checkbox = d3.select(\"#sort\")\r\n            .on(\"click\", () => update(select.property(\"value\"), 750));\r\n\r\n\r\n        //------------------------LEGEND-------------------------------\r\n        const legend = svg.selectAll(\".legend\")\r\n            .data(colors)\r\n            .enter().append(\"g\")\r\n                .attr(\"class\", \"legend\")\r\n                .attr(\"transform\", (d,i) => `translate(-200, ${i * 19})`);\r\n\r\n        legend.append(\"rect\")\r\n            .attr(\"x\", width - 18)\r\n            .attr(\"width\", 18)\r\n            .attr(\"height\", 18)\r\n            .style(\"fill\", (d,i) => colors.slice().reverse()[i]);\r\n\r\n        legend.append(\"text\")\r\n            .attr(\"x\", width + 5)\r\n            .attr(\"y\", 9)\r\n            .attr(\"dy\", \"0.35em\")\r\n            .style(\"text-anchor\", \"start\")\r\n            .text( (d,i) => {\r\n                // eslint-disable-next-line default-case\r\n                switch (i) {\r\n                    case 0: return \"PERMIT: TAP\";\r\n                    case 1: return \"SEWER PERMIT: INSTALL\";\r\n                    case 2: return \"SEWER PERMIT: PLUG\";\r\n                    case 3: return \"SEWER PERMIT: CATCH BASIN/MAN\"; \r\n                    case 4: return \"SEWER PERMIT: CATCH BASIN\"; \r\n                    case 5: return \"SEWER PERMIT: PRIVATE\"; \r\n                }\r\n            })          \r\n\r\n    //------bottom of drawBarChartTest()------\r\n    }\r\n\r\n    render(){\r\n        \r\n\r\n\r\n        return(\r\n            <Container fluid>\r\n                <h1>STACKED CHART DEMO</h1>\r\n                <div id=\"stacked-chart-sb\" className=\"stacked-chart\" ref=\"canvas\"></div>\r\n                Select year: \r\n                <select id=\"year\"></select>\r\n                <input type=\"checkbox\" id=\"sort\"></input>\r\n                Toggle sort\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StackedChartSB;","import React from 'react';\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport NavBar from './components/NavBar';\nimport Home from './components/Home';\nimport About from './components/About';\nimport AllBarChart from './charts/AllBarChart';\n// import BarChart from './XBarChart';\nimport ClusterChart2018 from './charts/ClusterChart2018';\nimport ClusterChart2019 from './charts/ClusterChart2019';\nimport Compare from './charts/Compare';\nimport Map from './charts/Map';\n// import BarChartTest from './sandbox/BarChartTest';\nimport StackedChartSB from './sandbox/StackedChartSB';\n\n \nfunction App() {\n  return (\n    <Router>\n      <NavBar />\n      <Switch>\n        <Route path='/' exact={true} component={Home} />\n        <Route path='/nyc-permits-viz' exact={true} component={Home} />\n        <Route path='/about' exact={true} component={About} />\n        {/* <Route path='/barchart' exact={true} component={BarChart} /> */}\n        <Route path='/2018' exact={true} component={ClusterChart2018} />\n        <Route path='/2019' exact={true} component={ClusterChart2019} />\n        <Route path='/comparison' exact={true} component={Compare} />\n        <Route path='/map' exact={true} component={Map} />\n        <Route path='/barchart-test' exact={true} component={AllBarChart} />\n        {/* <Route path='/clusterchart-test' exact={true} component={ClusterChart2018} /> */}\n        <Route path='/stackedchart-sb' exact={true} component={StackedChartSB} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/all.ae5cea69.csv\";","module.exports = __webpack_public_path__ + \"static/media/New_York_City_Department_of_Environmental_Protection_logo.0958f267.png\";","module.exports = __webpack_public_path__ + \"static/media/NYCOpenData_Logo.228bdb80.png\";","module.exports = __webpack_public_path__ + \"static/media/Logo-twitter.75604377.png\";","module.exports = __webpack_public_path__ + \"static/media/GitHub-Logo-03.957c4dd9.png\";","module.exports = __webpack_public_path__ + \"static/media/2018.86333227.csv\";","module.exports = __webpack_public_path__ + \"static/media/2019.7c2db490.csv\";","module.exports = __webpack_public_path__ + \"static/media/totals.80016fe3.csv\";"],"sourceRoot":""}